VectorClassDemo_data
====================

##  Test data

### .Net Core 2.0

```
VectorClassDemo20

IsRelease:      False
EnvironmentVariable(PROCESSOR_IDENTIFIER):      Intel64 Family 6 Model 142 Stepping 10, GenuineIntel
Environment.ProcessorCount:     8
Environment.Is64BitOperatingSystem:     True
Environment.Is64BitProcess:     True
Environment.OSVersion:  Microsoft Windows NT 10.0.19044.0
Environment.Version:    4.0.30319.42000
RuntimeEnvironment.GetRuntimeDirectory: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\2.0.9\
RuntimeInformation.FrameworkDescription:        .NET Core 4.6.26614.01
BitConverter.IsLittleEndian:    True
IntPtr.Size:    8
Vector.IsHardwareAccelerated:   True
Vector<byte>.Count:     32      # 256bit
Vector<T>.Assembly.CodeBase:    file:///C:/Program Files/dotnet/shared/Microsoft.NETCore.App/2.0.9/System.Numerics.Vectors.dll

-- Single, Vector<Single>.Count=8 --
srcT:   <-3.402823E+38, ∞, NaN, -1, 0, 1, 2, 4>
srcAllOnes:     <NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN>
Abs(srcT):      <3.402823E+38, ∞, NaN, 1, 0, 1, 2, 4>
Abs(srcAllOnes):        <NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN>
Add(srcT, src1):        <-3.402823E+38, ∞, NaN, 0, 1, 2, 3, 5>
Add(srcT, src2):        <-3.402823E+38, ∞, NaN, 1, 2, 3, 4, 6>
AndNot(srcT, src1):     <-4, 2, -3, 0, 0, 0, 2, 2>
AndNot(srcT, src2):     <-0.9999999, 1, -1.5, -1, 0, 1, 0, 1.175494E-38>
BitwiseAnd(srcT, src1): <0.5, 1, 1, 1, 0, 1, 0, 1.175494E-38>
BitwiseAnd(srcT, src2): <2, 2, 2, 0, 0, 0, 2, 2>
BitwiseOr(srcT, src1):  <NaN, ∞, NaN, -1, 1, 1, ∞, ∞>
BitwiseOr(srcT, src2):  <-3.402823E+38, ∞, NaN, -∞, 2, ∞, 2, 4>
Divide(srcT, src2):     <-1.701412E+38, ∞, NaN, -0.5, 0, 0.5, 1, 2>
Dot(srcT, src1):        NaN
Dot(srcT, src2):        NaN
Dot(src1, src2):        16
Equals(srcT, src0):     <0, 0, 0, 0, NaN, 0, 0, 0>
Equals(srcT, src1):     <0, 0, 0, 0, 0, NaN, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, NaN, 0, 0, 0, NaN, NaN, NaN>
GreaterThan(srcT, src1):        <0, NaN, 0, 0, 0, 0, NaN, NaN>
GreaterThanOrEqual(srcT, src0): <0, NaN, 0, 0, NaN, NaN, NaN, NaN>
GreaterThanOrEqual(srcT, src1): <0, NaN, 0, 0, 0, NaN, NaN, NaN>
LessThan(srcT, src0):   <NaN, 0, 0, NaN, 0, 0, 0, 0>
LessThan(srcT, src1):   <NaN, 0, 0, NaN, NaN, 0, 0, 0>
LessThanOrEqual(srcT, src0):    <NaN, 0, 0, NaN, NaN, 0, 0, 0>
LessThanOrEqual(srcT, src1):    <NaN, 0, 0, NaN, NaN, NaN, 0, 0>
Max(srcT, src0):        <0, ∞, 0, 0, 0, 1, 2, 4>
Max(srcT, src2):        <2, ∞, 2, 2, 2, 2, 2, 4>
Min(srcT, src0):        <-3.402823E+38, 0, 0, -1, 0, 0, 0, 0>
Min(srcT, src2):        <-3.402823E+38, 2, 2, -1, 0, 1, 2, 2>
Multiply(srcT, src2):   <-∞, ∞, NaN, -2, 0, 2, 4, 8>
Negate(srcT):   <3.402823E+38, -∞, NaN, 1, 0, -1, -2, -4>
Negate(srcAllOnes):     <NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN>
OnesComplement(srcT):   <1.175494E-38, -1.175494E-38, 5.87747E-39, 4, NaN, -4, -2, -0.9999999>
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0>
SquareRoot(srcT):       <NaN, ∞, NaN, NaN, 0, 1, 1.414214, 2>
Subtract(srcT, src1):   <-3.402823E+38, ∞, NaN, -2, -1, 0, 1, 3>
Subtract(srcT, src2):   <-3.402823E+38, ∞, NaN, -3, -2, -1, 0, 2>
Xor(srcT, src1):        <-8, 2, -3, 0, 1, 0, ∞, 1.701412E+38>
Xor(srcT, src2):        <-0.9999999, 1, -1.5, -∞, 2, ∞, 0, 1.175494E-38>

-- Double, Vector<Double>.Count=4 --
srcT:   <-1.79769313486232E+308, ∞, -1, 0>
srcAllOnes:     <NaN, NaN, NaN, NaN>
Abs(srcT):      <1.79769313486232E+308, ∞, 1, 0>
Abs(srcAllOnes):        <NaN, NaN, NaN, NaN>
Add(srcT, src1):        <-1.79769313486232E+308, ∞, 0, 1>
Add(srcT, src2):        <-1.79769313486232E+308, ∞, 1, 2>
AndNot(srcT, src1):     <-4, 2, 0, 0>
AndNot(srcT, src2):     <-1, 1, -1, 0>
BitwiseAnd(srcT, src1): <0.5, 1, 1, 0>
BitwiseAnd(srcT, src2): <2, 2, 0, 0>
BitwiseOr(srcT, src1):  <NaN, ∞, -1, 1>
BitwiseOr(srcT, src2):  <-1.79769313486232E+308, ∞, -∞, 2>
Divide(srcT, src2):     <-8.98846567431158E+307, ∞, -0.5, 0>
Dot(srcT, src1):        ∞
Dot(srcT, src2):        NaN
Dot(src1, src2):        8
Equals(srcT, src0):     <0, 0, 0, NaN>
Equals(srcT, src1):     <0, 0, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, NaN, 0, 0>
GreaterThan(srcT, src1):        <0, NaN, 0, 0>
GreaterThanOrEqual(srcT, src0): <0, NaN, 0, NaN>
GreaterThanOrEqual(srcT, src1): <0, NaN, 0, 0>
LessThan(srcT, src0):   <NaN, 0, NaN, 0>
LessThan(srcT, src1):   <NaN, 0, NaN, NaN>
LessThanOrEqual(srcT, src0):    <NaN, 0, NaN, NaN>
LessThanOrEqual(srcT, src1):    <NaN, 0, NaN, NaN>
Max(srcT, src0):        <0, ∞, 0, 0>
Max(srcT, src2):        <2, ∞, 2, 2>
Min(srcT, src0):        <-1.79769313486232E+308, 0, -1, 0>
Min(srcT, src2):        <-1.79769313486232E+308, 2, -1, 0>
Multiply(srcT, src2):   <-∞, ∞, -2, 0>
Negate(srcT):   <1.79769313486232E+308, -∞, 1, 0>
Negate(srcAllOnes):     <NaN, NaN, NaN, NaN>
OnesComplement(srcT):   <2.2250738585072E-308, -2.2250738585072E-308, 4, NaN>
OnesComplement(srcAllOnes):     <0, 0, 0, 0>
SquareRoot(srcT):       <NaN, ∞, NaN, 0>
Subtract(srcT, src1):   <-1.79769313486232E+308, ∞, -2, -1>
Subtract(srcT, src2):   <-1.79769313486232E+308, ∞, -3, -2>
Xor(srcT, src1):        <-8, 2, 0, 1>
Xor(srcT, src2):        <-1, 1, -∞, 2>

-- SByte, Vector<SByte>.Count=32 --
srcT:   <-128, 127, -1, 0, 1, 2, 3, 4, -128, 127, -1, 0, 1, 2, 3, 4, -128, 127, -1, 0, 1, 2, 3, 4, -128, 127, -1, 0, 1, 2, 3, 4>
srcAllOnes:     <-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1>
Abs(srcT):      <-128, 127, 1, 0, 1, 2, 3, 4, -128, 127, 1, 0, 1, 2, 3, 4, -128, 127, 1, 0, 1, 2, 3, 4, -128, 127, 1, 0, 1, 2, 3, 4>
Abs(srcAllOnes):        <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>
Add(srcT, src1):        <-127, -128, 0, 1, 2, 3, 4, 5, -127, -128, 0, 1, 2, 3, 4, 5, -127, -128, 0, 1, 2, 3, 4, 5, -127, -128, 0, 1, 2, 3, 4, 5>
Add(srcT, src2):        <-126, -127, 1, 2, 3, 4, 5, 6, -126, -127, 1, 2, 3, 4, 5, 6, -126, -127, 1, 2, 3, 4, 5, 6, -126, -127, 1, 2, 3, 4, 5, 6>
AndNot(srcT, src1):     <-128, 126, -2, 0, 0, 2, 2, 4, -128, 126, -2, 0, 0, 2, 2, 4, -128, 126, -2, 0, 0, 2, 2, 4, -128, 126, -2, 0, 0, 2, 2, 4>
AndNot(srcT, src2):     <-128, 125, -3, 0, 1, 0, 1, 4, -128, 125, -3, 0, 1, 0, 1, 4, -128, 125, -3, 0, 1, 0, 1, 4, -128, 125, -3, 0, 1, 0, 1, 4>
BitwiseAnd(srcT, src1): <0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0>
BitwiseAnd(srcT, src2): <0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0>
BitwiseOr(srcT, src1):  <-127, 127, -1, 1, 1, 3, 3, 5, -127, 127, -1, 1, 1, 3, 3, 5, -127, 127, -1, 1, 1, 3, 3, 5, -127, 127, -1, 1, 1, 3, 3, 5>
BitwiseOr(srcT, src2):  <-126, 127, -1, 2, 3, 2, 3, 6, -126, 127, -1, 2, 3, 2, 3, 6, -126, 127, -1, 2, 3, 2, 3, 6, -126, 127, -1, 2, 3, 2, 3, 6>
Divide(srcT, src2):     <-64, 63, 0, 0, 0, 1, 1, 2, -64, 63, 0, 0, 0, 1, 1, 2, -64, 63, 0, 0, 0, 1, 1, 2, -64, 63, 0, 0, 0, 1, 1, 2>
Dot(srcT, src1):        32
Dot(srcT, src2):        64
Dot(src1, src2):        64
Equals(srcT, src0):     <0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0>
Equals(srcT, src1):     <0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>
GreaterThan(srcT, src1):        <0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1>
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1>
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>
LessThan(srcT, src0):   <-1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0>
LessThan(srcT, src1):   <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0>
Max(srcT, src0):        <0, 127, 0, 0, 1, 2, 3, 4, 0, 127, 0, 0, 1, 2, 3, 4, 0, 127, 0, 0, 1, 2, 3, 4, 0, 127, 0, 0, 1, 2, 3, 4>
Max(srcT, src2):        <2, 127, 2, 2, 2, 2, 3, 4, 2, 127, 2, 2, 2, 2, 3, 4, 2, 127, 2, 2, 2, 2, 3, 4, 2, 127, 2, 2, 2, 2, 3, 4>
Min(srcT, src0):        <-128, 0, -1, 0, 0, 0, 0, 0, -128, 0, -1, 0, 0, 0, 0, 0, -128, 0, -1, 0, 0, 0, 0, 0, -128, 0, -1, 0, 0, 0, 0, 0>
Min(srcT, src2):        <-128, 2, -1, 0, 1, 2, 2, 2, -128, 2, -1, 0, 1, 2, 2, 2, -128, 2, -1, 0, 1, 2, 2, 2, -128, 2, -1, 0, 1, 2, 2, 2>
Multiply(srcT, src2):   <0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8>
Negate(srcT):   <-128, -127, 1, 0, -1, -2, -3, -4, -128, -127, 1, 0, -1, -2, -3, -4, -128, -127, 1, 0, -1, -2, -3, -4, -128, -127, 1, 0, -1, -2, -3, -4>
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>
OnesComplement(srcT):   <127, -128, 0, -1, -2, -3, -4, -5, 127, -128, 0, -1, -2, -3, -4, -5, 127, -128, 0, -1, -2, -3, -4, -5, 127, -128, 0, -1, -2, -3, -4, -5>
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
SquareRoot(srcT):       <0, 11, 0, 0, 1, 1, 1, 2, 0, 11, 0, 0, 1, 1, 1, 2, 0, 11, 0, 0, 1, 1, 1, 2, 0, 11, 0, 0, 1, 1, 1, 2>
Subtract(srcT, src1):   <127, 126, -2, -1, 0, 1, 2, 3, 127, 126, -2, -1, 0, 1, 2, 3, 127, 126, -2, -1, 0, 1, 2, 3, 127, 126, -2, -1, 0, 1, 2, 3>
Subtract(srcT, src2):   <126, 125, -3, -2, -1, 0, 1, 2, 126, 125, -3, -2, -1, 0, 1, 2, 126, 125, -3, -2, -1, 0, 1, 2, 126, 125, -3, -2, -1, 0, 1, 2>
Xor(srcT, src1):        <-127, 126, -2, 1, 0, 3, 2, 5, -127, 126, -2, 1, 0, 3, 2, 5, -127, 126, -2, 1, 0, 3, 2, 5, -127, 126, -2, 1, 0, 3, 2, 5>
Xor(srcT, src2):        <-126, 125, -3, 2, 3, 0, 1, 6, -126, 125, -3, 2, 3, 0, 1, 6, -126, 125, -3, 2, 3, 0, 1, 6, -126, 125, -3, 2, 3, 0, 1, 6>

-- Int16, Vector<Int16>.Count=16 --
srcT:   <-32768, 32767, -1, 0, 1, 2, 3, 4, -32768, 32767, -1, 0, 1, 2, 3, 4>
srcAllOnes:     <-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1>
Abs(srcT):      <-32768, 32767, 1, 0, 1, 2, 3, 4, -32768, 32767, 1, 0, 1, 2, 3, 4>
Abs(srcAllOnes):        <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>
Add(srcT, src1):        <-32767, -32768, 0, 1, 2, 3, 4, 5, -32767, -32768, 0, 1, 2, 3, 4, 5>
Add(srcT, src2):        <-32766, -32767, 1, 2, 3, 4, 5, 6, -32766, -32767, 1, 2, 3, 4, 5, 6>
AndNot(srcT, src1):     <-32768, 32766, -2, 0, 0, 2, 2, 4, -32768, 32766, -2, 0, 0, 2, 2, 4>
AndNot(srcT, src2):     <-32768, 32765, -3, 0, 1, 0, 1, 4, -32768, 32765, -3, 0, 1, 0, 1, 4>
BitwiseAnd(srcT, src1): <0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0>
BitwiseAnd(srcT, src2): <0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0>
BitwiseOr(srcT, src1):  <-32767, 32767, -1, 1, 1, 3, 3, 5, -32767, 32767, -1, 1, 1, 3, 3, 5>
BitwiseOr(srcT, src2):  <-32766, 32767, -1, 2, 3, 2, 3, 6, -32766, 32767, -1, 2, 3, 2, 3, 6>
Divide(srcT, src2):     <-16384, 16383, 0, 0, 0, 1, 1, 2, -16384, 16383, 0, 0, 0, 1, 1, 2>
Dot(srcT, src1):        16
Dot(srcT, src2):        32
Dot(src1, src2):        32
Equals(srcT, src0):     <0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0>
Equals(srcT, src1):     <0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>
GreaterThan(srcT, src1):        <0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1>
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1>
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>
LessThan(srcT, src0):   <-1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0>
LessThan(srcT, src1):   <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0>
Max(srcT, src0):        <0, 32767, 0, 0, 1, 2, 3, 4, 0, 32767, 0, 0, 1, 2, 3, 4>
Max(srcT, src2):        <2, 32767, 2, 2, 2, 2, 3, 4, 2, 32767, 2, 2, 2, 2, 3, 4>
Min(srcT, src0):        <-32768, 0, -1, 0, 0, 0, 0, 0, -32768, 0, -1, 0, 0, 0, 0, 0>
Min(srcT, src2):        <-32768, 2, -1, 0, 1, 2, 2, 2, -32768, 2, -1, 0, 1, 2, 2, 2>
Multiply(srcT, src2):   <0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8>
Negate(srcT):   <-32768, -32767, 1, 0, -1, -2, -3, -4, -32768, -32767, 1, 0, -1, -2, -3, -4>
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>
OnesComplement(srcT):   <32767, -32768, 0, -1, -2, -3, -4, -5, 32767, -32768, 0, -1, -2, -3, -4, -5>
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
SquareRoot(srcT):       <0, 181, 0, 0, 1, 1, 1, 2, 0, 181, 0, 0, 1, 1, 1, 2>
Subtract(srcT, src1):   <32767, 32766, -2, -1, 0, 1, 2, 3, 32767, 32766, -2, -1, 0, 1, 2, 3>
Subtract(srcT, src2):   <32766, 32765, -3, -2, -1, 0, 1, 2, 32766, 32765, -3, -2, -1, 0, 1, 2>
Xor(srcT, src1):        <-32767, 32766, -2, 1, 0, 3, 2, 5, -32767, 32766, -2, 1, 0, 3, 2, 5>
Xor(srcT, src2):        <-32766, 32765, -3, 2, 3, 0, 1, 6, -32766, 32765, -3, 2, 3, 0, 1, 6>

-- Int32, Vector<Int32>.Count=8 --
srcT:   <-2147483648, 2147483647, -1, 0, 1, 2, 3, 4>
srcAllOnes:     <-1, -1, -1, -1, -1, -1, -1, -1>
Abs(srcT):      <-2147483648, 2147483647, 1, 0, 1, 2, 3, 4>
Abs(srcAllOnes):        <1, 1, 1, 1, 1, 1, 1, 1>
Add(srcT, src1):        <-2147483647, -2147483648, 0, 1, 2, 3, 4, 5>
Add(srcT, src2):        <-2147483646, -2147483647, 1, 2, 3, 4, 5, 6>
AndNot(srcT, src1):     <-2147483648, 2147483646, -2, 0, 0, 2, 2, 4>
AndNot(srcT, src2):     <-2147483648, 2147483645, -3, 0, 1, 0, 1, 4>
BitwiseAnd(srcT, src1): <0, 1, 1, 0, 1, 0, 1, 0>
BitwiseAnd(srcT, src2): <0, 2, 2, 0, 0, 2, 2, 0>
BitwiseOr(srcT, src1):  <-2147483647, 2147483647, -1, 1, 1, 3, 3, 5>
BitwiseOr(srcT, src2):  <-2147483646, 2147483647, -1, 2, 3, 2, 3, 6>
Divide(srcT, src2):     <-1073741824, 1073741823, 0, 0, 0, 1, 1, 2>
Dot(srcT, src1):        8
Dot(srcT, src2):        16
Dot(src1, src2):        16
Equals(srcT, src0):     <0, 0, 0, -1, 0, 0, 0, 0>
Equals(srcT, src1):     <0, 0, 0, 0, -1, 0, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0, -1, -1, -1, -1>
GreaterThan(srcT, src1):        <0, -1, 0, 0, 0, -1, -1, -1>
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1, -1, -1, -1, -1>
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0, -1, -1, -1, -1>
LessThan(srcT, src0):   <-1, 0, -1, 0, 0, 0, 0, 0>
LessThan(srcT, src1):   <-1, 0, -1, -1, 0, 0, 0, 0>
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1, 0, 0, 0, 0>
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1, -1, 0, 0, 0>
Max(srcT, src0):        <0, 2147483647, 0, 0, 1, 2, 3, 4>
Max(srcT, src2):        <2, 2147483647, 2, 2, 2, 2, 3, 4>
Min(srcT, src0):        <-2147483648, 0, -1, 0, 0, 0, 0, 0>
Min(srcT, src2):        <-2147483648, 2, -1, 0, 1, 2, 2, 2>
Multiply(srcT, src2):   <0, -2, -2, 0, 2, 4, 6, 8>
Negate(srcT):   <-2147483648, -2147483647, 1, 0, -1, -2, -3, -4>
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1>
OnesComplement(srcT):   <2147483647, -2147483648, 0, -1, -2, -3, -4, -5>
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0>
SquareRoot(srcT):       <-2147483648, 46340, -2147483648, 0, 1, 1, 1, 2>
Subtract(srcT, src1):   <2147483647, 2147483646, -2, -1, 0, 1, 2, 3>
Subtract(srcT, src2):   <2147483646, 2147483645, -3, -2, -1, 0, 1, 2>
Xor(srcT, src1):        <-2147483647, 2147483646, -2, 1, 0, 3, 2, 5>
Xor(srcT, src2):        <-2147483646, 2147483645, -3, 2, 3, 0, 1, 6>

-- Int64, Vector<Int64>.Count=4 --
srcT:   <-9223372036854775808, 9223372036854775807, -1, 0>
srcAllOnes:     <-1, -1, -1, -1>
Abs(srcT):      <-9223372036854775808, 9223372036854775807, 1, 0>
Abs(srcAllOnes):        <1, 1, 1, 1>
Add(srcT, src1):        <-9223372036854775807, -9223372036854775808, 0, 1>
Add(srcT, src2):        <-9223372036854775806, -9223372036854775807, 1, 2>
AndNot(srcT, src1):     <-9223372036854775808, 9223372036854775806, -2, 0>
AndNot(srcT, src2):     <-9223372036854775808, 9223372036854775805, -3, 0>
BitwiseAnd(srcT, src1): <0, 1, 1, 0>
BitwiseAnd(srcT, src2): <0, 2, 2, 0>
BitwiseOr(srcT, src1):  <-9223372036854775807, 9223372036854775807, -1, 1>
BitwiseOr(srcT, src2):  <-9223372036854775806, 9223372036854775807, -1, 2>
Divide(srcT, src2):     <-4611686018427387904, 4611686018427387903, 0, 0>
Dot(srcT, src1):        -2
Dot(srcT, src2):        -4
Dot(src1, src2):        8
Equals(srcT, src0):     <0, 0, 0, -1>
Equals(srcT, src1):     <0, 0, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0>
GreaterThan(srcT, src1):        <0, -1, 0, 0>
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1>
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0>
LessThan(srcT, src0):   <-1, 0, -1, 0>
LessThan(srcT, src1):   <-1, 0, -1, -1>
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1>
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1>
Max(srcT, src0):        <0, 9223372036854775807, 0, 0>
Max(srcT, src2):        <2, 9223372036854775807, 2, 2>
Min(srcT, src0):        <-9223372036854775808, 0, -1, 0>
Min(srcT, src2):        <-9223372036854775808, 2, -1, 0>
Multiply(srcT, src2):   <0, -2, -2, 0>
Negate(srcT):   <-9223372036854775808, -9223372036854775807, 1, 0>
Negate(srcAllOnes):     <1, 1, 1, 1>
OnesComplement(srcT):   <9223372036854775807, -9223372036854775808, 0, -1>
OnesComplement(srcAllOnes):     <0, 0, 0, 0>
SquareRoot(srcT):       <-9223372036854775808, 3037000499, -9223372036854775808, 0>
Subtract(srcT, src1):   <9223372036854775807, 9223372036854775806, -2, -1>
Subtract(srcT, src2):   <9223372036854775806, 9223372036854775805, -3, -2>
Xor(srcT, src1):        <-9223372036854775807, 9223372036854775806, -2, 1>
Xor(srcT, src2):        <-9223372036854775806, 9223372036854775805, -3, 2>

-- Byte, Vector<Byte>.Count=32 --
srcT:   <0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1>
srcAllOnes:     <255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255>
Abs(srcT):      <0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1>
Abs(srcAllOnes):        <255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255>
Add(srcT, src1):        <1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2>
Add(srcT, src2):        <2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3>
AndNot(srcT, src1):     <0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0>
AndNot(srcT, src2):     <0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1>
BitwiseAnd(srcT, src1): <0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1>
BitwiseAnd(srcT, src2): <0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0>
BitwiseOr(srcT, src1):  <1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1>
BitwiseOr(srcT, src2):  <2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3>
Divide(srcT, src2):     <0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0>
Dot(srcT, src1):        36
Dot(srcT, src2):        72
Dot(src1, src2):        64
Equals(srcT, src0):     <255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0>
Equals(srcT, src1):     <0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255>
GreaterThan(srcT, src1):        <0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0>
GreaterThanOrEqual(srcT, src0): <255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255>
GreaterThanOrEqual(srcT, src1): <0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255>
LessThan(srcT, src0):   <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
LessThan(srcT, src1):   <255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0>
LessThanOrEqual(srcT, src0):    <255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0>
LessThanOrEqual(srcT, src1):    <255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255>
Max(srcT, src0):        <0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1>
Max(srcT, src2):        <2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2>
Min(srcT, src0):        <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
Min(srcT, src2):        <0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1>
Multiply(srcT, src2):   <0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2>
Negate(srcT):   <0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255>
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>
OnesComplement(srcT):   <255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254>
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
SquareRoot(srcT):       <0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1>
Subtract(srcT, src1):   <255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0>
Subtract(srcT, src2):   <254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255>
Xor(srcT, src1):        <1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0>
Xor(srcT, src2):        <2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3>

-- UInt16, Vector<UInt16>.Count=16 --
srcT:   <0, 65535, 0, 1, 2, 3, 4, 0, 65535, 0, 1, 2, 3, 4, 0, 65535>
srcAllOnes:     <65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535>
Abs(srcT):      <0, 65535, 0, 1, 2, 3, 4, 0, 65535, 0, 1, 2, 3, 4, 0, 65535>
Abs(srcAllOnes):        <65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535>
Add(srcT, src1):        <1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0>
Add(srcT, src2):        <2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1>
AndNot(srcT, src1):     <0, 65534, 0, 0, 2, 2, 4, 0, 65534, 0, 0, 2, 2, 4, 0, 65534>
AndNot(srcT, src2):     <0, 65533, 0, 1, 0, 1, 4, 0, 65533, 0, 1, 0, 1, 4, 0, 65533>
BitwiseAnd(srcT, src1): <0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1>
BitwiseAnd(srcT, src2): <0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2>
BitwiseOr(srcT, src1):  <1, 65535, 1, 1, 3, 3, 5, 1, 65535, 1, 1, 3, 3, 5, 1, 65535>
BitwiseOr(srcT, src2):  <2, 65535, 2, 3, 2, 3, 6, 2, 65535, 2, 3, 2, 3, 6, 2, 65535>
Divide(srcT, src2):     <0, 32767, 0, 0, 1, 1, 2, 0, 32767, 0, 0, 1, 1, 2, 0, 32767>
Dot(srcT, src1):        17
Dot(srcT, src2):        34
Dot(src1, src2):        32
Equals(srcT, src0):     <65535, 0, 65535, 0, 0, 0, 0, 65535, 0, 65535, 0, 0, 0, 0, 65535, 0>
Equals(srcT, src1):     <0, 0, 0, 65535, 0, 0, 0, 0, 0, 0, 65535, 0, 0, 0, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535>
GreaterThan(srcT, src1):        <0, 65535, 0, 0, 65535, 65535, 65535, 0, 65535, 0, 0, 65535, 65535, 65535, 0, 65535>
GreaterThanOrEqual(srcT, src0): <65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535>
GreaterThanOrEqual(srcT, src1): <0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535>
LessThan(srcT, src0):   <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
LessThan(srcT, src1):   <65535, 0, 65535, 0, 0, 0, 0, 65535, 0, 65535, 0, 0, 0, 0, 65535, 0>
LessThanOrEqual(srcT, src0):    <65535, 0, 65535, 0, 0, 0, 0, 65535, 0, 65535, 0, 0, 0, 0, 65535, 0>
LessThanOrEqual(srcT, src1):    <65535, 0, 65535, 65535, 0, 0, 0, 65535, 0, 65535, 65535, 0, 0, 0, 65535, 0>
Max(srcT, src0):        <0, 65535, 0, 1, 2, 3, 4, 0, 65535, 0, 1, 2, 3, 4, 0, 65535>
Max(srcT, src2):        <2, 65535, 2, 2, 2, 3, 4, 2, 65535, 2, 2, 2, 3, 4, 2, 65535>
Min(srcT, src0):        <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
Min(srcT, src2):        <0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2>
Multiply(srcT, src2):   <0, 65534, 0, 2, 4, 6, 8, 0, 65534, 0, 2, 4, 6, 8, 0, 65534>
Negate(srcT):   <0, 1, 0, 65535, 65534, 65533, 65532, 0, 1, 0, 65535, 65534, 65533, 65532, 0, 1>
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>
OnesComplement(srcT):   <65535, 0, 65535, 65534, 65533, 65532, 65531, 65535, 0, 65535, 65534, 65533, 65532, 65531, 65535, 0>
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>
SquareRoot(srcT):       <0, 255, 0, 1, 1, 1, 2, 0, 255, 0, 1, 1, 1, 2, 0, 255>
Subtract(srcT, src1):   <65535, 65534, 65535, 0, 1, 2, 3, 65535, 65534, 65535, 0, 1, 2, 3, 65535, 65534>
Subtract(srcT, src2):   <65534, 65533, 65534, 65535, 0, 1, 2, 65534, 65533, 65534, 65535, 0, 1, 2, 65534, 65533>
Xor(srcT, src1):        <1, 65534, 1, 0, 3, 2, 5, 1, 65534, 1, 0, 3, 2, 5, 1, 65534>
Xor(srcT, src2):        <2, 65533, 2, 3, 0, 1, 6, 2, 65533, 2, 3, 0, 1, 6, 2, 65533>

-- UInt32, Vector<UInt32>.Count=8 --
srcT:   <0, 4294967295, 0, 1, 2, 3, 4, 0>
srcAllOnes:     <4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295>
Abs(srcT):      <0, 4294967295, 0, 1, 2, 3, 4, 0>
Abs(srcAllOnes):        <4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295>
Add(srcT, src1):        <1, 0, 1, 2, 3, 4, 5, 1>
Add(srcT, src2):        <2, 1, 2, 3, 4, 5, 6, 2>
AndNot(srcT, src1):     <0, 4294967294, 0, 0, 2, 2, 4, 0>
AndNot(srcT, src2):     <0, 4294967293, 0, 1, 0, 1, 4, 0>
BitwiseAnd(srcT, src1): <0, 1, 0, 1, 0, 1, 0, 0>
BitwiseAnd(srcT, src2): <0, 2, 0, 0, 2, 2, 0, 0>
BitwiseOr(srcT, src1):  <1, 4294967295, 1, 1, 3, 3, 5, 1>
BitwiseOr(srcT, src2):  <2, 4294967295, 2, 3, 2, 3, 6, 2>
Divide(srcT, src2):     <0, 2147483647, 0, 0, 1, 1, 2, 0>
Dot(srcT, src1):        9
Dot(srcT, src2):        18
Dot(src1, src2):        16
Equals(srcT, src0):     <4294967295, 0, 4294967295, 0, 0, 0, 0, 4294967295>
Equals(srcT, src1):     <0, 0, 0, 4294967295, 0, 0, 0, 0>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 4294967295, 0, 4294967295, 4294967295, 4294967295, 4294967295, 0>
GreaterThan(srcT, src1):        <0, 4294967295, 0, 0, 4294967295, 4294967295, 4294967295, 0>
GreaterThanOrEqual(srcT, src0): <4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295>
GreaterThanOrEqual(srcT, src1): <0, 4294967295, 0, 4294967295, 4294967295, 4294967295, 4294967295, 0>
LessThan(srcT, src0):   <0, 0, 0, 0, 0, 0, 0, 0>
LessThan(srcT, src1):   <4294967295, 0, 4294967295, 0, 0, 0, 0, 4294967295>
LessThanOrEqual(srcT, src0):    <4294967295, 0, 4294967295, 0, 0, 0, 0, 4294967295>
LessThanOrEqual(srcT, src1):    <4294967295, 0, 4294967295, 4294967295, 0, 0, 0, 4294967295>
Max(srcT, src0):        <0, 4294967295, 0, 1, 2, 3, 4, 0>
Max(srcT, src2):        <2, 4294967295, 2, 2, 2, 3, 4, 2>
Min(srcT, src0):        <0, 0, 0, 0, 0, 0, 0, 0>
Min(srcT, src2):        <0, 2, 0, 1, 2, 2, 2, 0>
Multiply(srcT, src2):   <0, 4294967294, 0, 2, 4, 6, 8, 0>
Negate(srcT):   <0, 1, 0, 4294967295, 4294967294, 4294967293, 4294967292, 0>
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1>
OnesComplement(srcT):   <4294967295, 0, 4294967295, 4294967294, 4294967293, 4294967292, 4294967291, 4294967295>
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0>
SquareRoot(srcT):       <0, 65535, 0, 1, 1, 1, 2, 0>
Subtract(srcT, src1):   <4294967295, 4294967294, 4294967295, 0, 1, 2, 3, 4294967295>
Subtract(srcT, src2):   <4294967294, 4294967293, 4294967294, 4294967295, 0, 1, 2, 4294967294>
Xor(srcT, src1):        <1, 4294967294, 1, 0, 3, 2, 5, 1>
Xor(srcT, src2):        <2, 4294967293, 2, 3, 0, 1, 6, 2>

-- UInt64, Vector<UInt64>.Count=4 --
srcT:   <0, 18446744073709551615, 0, 1>
srcAllOnes:     <18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615>
Abs(srcT):      <0, 18446744073709551615, 0, 1>
Abs(srcAllOnes):        <18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615>
Add(srcT, src1):        <1, 0, 1, 2>
Add(srcT, src2):        <2, 1, 2, 3>
AndNot(srcT, src1):     <0, 18446744073709551614, 0, 0>
AndNot(srcT, src2):     <0, 18446744073709551613, 0, 1>
BitwiseAnd(srcT, src1): <0, 1, 0, 1>
BitwiseAnd(srcT, src2): <0, 2, 0, 0>
BitwiseOr(srcT, src1):  <1, 18446744073709551615, 1, 1>
BitwiseOr(srcT, src2):  <2, 18446744073709551615, 2, 3>
Divide(srcT, src2):     <0, 9223372036854775807, 0, 0>
Dot(srcT, src1):        0
Dot(srcT, src2):        0
Dot(src1, src2):        8
Equals(srcT, src0):     <18446744073709551615, 0, 18446744073709551615, 0>
Equals(srcT, src1):     <0, 0, 0, 18446744073709551615>
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 18446744073709551615, 0, 18446744073709551615>
GreaterThan(srcT, src1):        <0, 18446744073709551615, 0, 0>
GreaterThanOrEqual(srcT, src0): <18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615>
GreaterThanOrEqual(srcT, src1): <0, 18446744073709551615, 0, 18446744073709551615>
LessThan(srcT, src0):   <0, 0, 0, 0>
LessThan(srcT, src1):   <18446744073709551615, 0, 18446744073709551615, 0>
LessThanOrEqual(srcT, src0):    <18446744073709551615, 0, 18446744073709551615, 0>
LessThanOrEqual(srcT, src1):    <18446744073709551615, 0, 18446744073709551615, 18446744073709551615>
Max(srcT, src0):        <0, 18446744073709551615, 0, 1>
Max(srcT, src2):        <2, 18446744073709551615, 2, 2>
Min(srcT, src0):        <0, 0, 0, 0>
Min(srcT, src2):        <0, 2, 0, 1>
Multiply(srcT, src2):   <0, 18446744073709551614, 0, 2>
Negate(srcT):   <0, 1, 0, 18446744073709551615>
Negate(srcAllOnes):     <1, 1, 1, 1>
OnesComplement(srcT):   <18446744073709551615, 0, 18446744073709551615, 18446744073709551614>
OnesComplement(srcAllOnes):     <0, 0, 0, 0>
SquareRoot(srcT):       <0, 4294967296, 0, 1>
Subtract(srcT, src1):   <18446744073709551615, 18446744073709551614, 18446744073709551615, 0>
Subtract(srcT, src2):   <18446744073709551614, 18446744073709551613, 18446744073709551614, 18446744073709551615>
Xor(srcT, src1):        <1, 18446744073709551614, 1, 0>
Xor(srcT, src2):        <2, 18446744073709551613, 2, 3>

```

### .Net 5

```
VectorClassDemo50

IsRelease:      False
EnvironmentVariable(PROCESSOR_IDENTIFIER):      Intel64 Family 6 Model 142 Stepping 10, GenuineIntel
Environment.ProcessorCount:     8
Environment.Is64BitOperatingSystem:     True
Environment.Is64BitProcess:     True
Environment.OSVersion:  Microsoft Windows NT 10.0.19044.0
Environment.Version:    5.0.17
RuntimeEnvironment.GetRuntimeDirectory: C:\Program Files\dotnet\shared\Microsoft.NETCore.App\5.0.17\
RuntimeInformation.FrameworkDescription:        .NET 5.0.17
BitConverter.IsLittleEndian:    True
IntPtr.Size:    8
Vector.IsHardwareAccelerated:   True
Vector<byte>.Count:     32      # 256bit
Vector<T>.Assembly.CodeBase:    file:///C:/Program Files/dotnet/shared/Microsoft.NETCore.App/5.0.17/System.Private.CoreLib.dll

-- Single, Vector<Single>.Count=8 --
srcT:   <-3.4028235E+38, ∞, NaN, -1.2, 0, 1, 2, 4>     # (FF7FFFFF 7F800000 FFC00000 BF99999A 00000000 3F800000 40000000 40800000)
srcAllOnes:     <NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN>        # (FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
Abs(srcT):      <3.4028235E+38, ∞, NaN, 1.2, 0, 1, 2, 4>       # (7F7FFFFF 7F800000 7FC00000 3F99999A 00000000 3F800000 40000000 40800000)
Abs(srcAllOnes):        <NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN>        # (7FFFFFFF 7FFFFFFF 7FFFFFFF 7FFFFFFF 7FFFFFFF 7FFFFFFF 7FFFFFFF 7FFFFFFF)
Add(srcT, src1):        <-3.4028235E+38, ∞, NaN, -0.20000005, 1, 2, 3, 5>      # (FF7FFFFF 7F800000 FFC00000 BE4CCCD0 3F800000 40000000 40400000 40A00000)
Add(srcT, src2):        <-3.4028235E+38, ∞, NaN, 0.79999995, 2, 3, 4, 6>       # (FF7FFFFF 7F800000 FFC00000 3F4CCCCC 40000000 40400000 40800000 40C00000)
AndNot(srcT, src1):     <-3.9999998, 2, -3, -2.350989E-39, 0, 0, 2, 2>  # (C07FFFFF 40000000 C0400000 8019999A 00000000 00000000 40000000 40000000)
AndNot(srcT, src2):     <-0.99999994, 1, -1.5, -1.2, 0, 1, 0, 1.1754944E-38>    # (BF7FFFFF 3F800000 BFC00000 BF99999A 00000000 3F800000 00000000 00800000)
BitwiseAnd(srcT, src1): <0.5, 1, 1, 1, 0, 1, 0, 1.1754944E-38>  # (3F000000 3F800000 3F800000 3F800000 00000000 3F800000 00000000 00800000)
BitwiseAnd(srcT, src2): <2, 2, 2, 0, 0, 0, 2, 2>        # (40000000 40000000 40000000 00000000 00000000 00000000 40000000 40000000)
BitwiseOr(srcT, src1):  <NaN, ∞, NaN, -1.2, 1, 1, ∞, ∞>      # (FFFFFFFF 7F800000 FFC00000 BF99999A 3F800000 3F800000 7F800000 7F800000)
BitwiseOr(srcT, src2):  <-3.4028235E+38, ∞, NaN, NaN, 2, ∞, 2, 4>     # (FF7FFFFF 7F800000 FFC00000 FF99999A 40000000 7F800000 40000000 40800000)
Ceiling(srcT):  <-3.4028235E+38, ∞, NaN, -1, 0, 1, 2, 4>       # (FF7FFFFF 7F800000 FFC00000 BF800000 00000000 3F800000 40000000 40800000)
Divide(srcT, src2):     <-1.7014117E+38, ∞, NaN, -0.6, 0, 0.5, 1, 2>   # (FEFFFFFF 7F800000 FFC00000 BF19999A 00000000 3F000000 3F800000 40000000)
Dot(srcT, src1):        NaN
Dot(srcT, src2):        NaN
Dot(src1, src2):        16
Equals(srcT, src0):     <0, 0, 0, 0, NaN, 0, 0, 0>      # (00000000 00000000 00000000 00000000 FFFFFFFF 00000000 00000000 00000000)
Equals(srcT, src1):     <0, 0, 0, 0, 0, NaN, 0, 0>      # (00000000 00000000 00000000 00000000 00000000 FFFFFFFF 00000000 00000000)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
Floor(srcT):    <-3.4028235E+38, ∞, NaN, -2, 0, 1, 2, 4>       # (FF7FFFFF 7F800000 FFC00000 C0000000 00000000 3F800000 40000000 40800000)
GreaterThan(srcT, src0):        <0, NaN, 0, 0, 0, NaN, NaN, NaN>        # (00000000 FFFFFFFF 00000000 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF)
GreaterThan(srcT, src1):        <0, NaN, 0, 0, 0, 0, NaN, NaN>  # (00000000 FFFFFFFF 00000000 00000000 00000000 00000000 FFFFFFFF FFFFFFFF)
GreaterThanOrEqual(srcT, src0): <0, NaN, 0, 0, NaN, NaN, NaN, NaN>      # (00000000 FFFFFFFF 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
GreaterThanOrEqual(srcT, src1): <0, NaN, 0, 0, 0, NaN, NaN, NaN>        # (00000000 FFFFFFFF 00000000 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF)
LessThan(srcT, src0):   <NaN, 0, 0, NaN, 0, 0, 0, 0>    # (FFFFFFFF 00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000)
LessThan(srcT, src1):   <NaN, 0, 0, NaN, NaN, 0, 0, 0>  # (FFFFFFFF 00000000 00000000 FFFFFFFF FFFFFFFF 00000000 00000000 00000000)
LessThanOrEqual(srcT, src0):    <NaN, 0, 0, NaN, NaN, 0, 0, 0>  # (FFFFFFFF 00000000 00000000 FFFFFFFF FFFFFFFF 00000000 00000000 00000000)
LessThanOrEqual(srcT, src1):    <NaN, 0, 0, NaN, NaN, NaN, 0, 0>        # (FFFFFFFF 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF 00000000 00000000)
Max(srcT, src0):        <0, ∞, 0, 0, 0, 1, 2, 4>       # (00000000 7F800000 00000000 00000000 00000000 3F800000 40000000 40800000)
Max(srcT, src2):        <2, ∞, 2, 2, 2, 2, 2, 4>       # (40000000 7F800000 40000000 40000000 40000000 40000000 40000000 40800000)
Min(srcT, src0):        <-3.4028235E+38, 0, 0, -1.2, 0, 0, 0, 0>        # (FF7FFFFF 00000000 00000000 BF99999A 00000000 00000000 00000000 00000000)
Min(srcT, src2):        <-3.4028235E+38, 2, 2, -1.2, 0, 1, 2, 2>        # (FF7FFFFF 40000000 40000000 BF99999A 00000000 3F800000 40000000 40000000)
Multiply(srcT, src2):   <-∞, ∞, NaN, -2.4, 0, 2, 4, 8>        # (FF800000 7F800000 FFC00000 C019999A 00000000 40000000 40800000 41000000)
Negate(srcT):   <3.4028235E+38, -∞, NaN, 1.2, 0, -1, -2, -4>   # (7F7FFFFF FF800000 FFC00000 3F99999A 00000000 BF800000 C0000000 C0800000)
Negate(srcAllOnes):     <NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN>        # (FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
OnesComplement(srcT):   <1.1754944E-38, -1.1754942E-38, 5.87747E-39, 3.5999997, NaN, -3.9999998, -1.9999999, -0.99999994>       # (00800000 807FFFFF 003FFFFF 40666665 FFFFFFFF C07FFFFF BFFFFFFF BF7FFFFF)
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0>        # (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
SquareRoot(srcT):       <NaN, ∞, NaN, NaN, 0, 1, 1.4142135, 2> # (FFC00000 7F800000 FFC00000 FFC00000 00000000 3F800000 3FB504F3 40000000)
Subtract(srcT, src1):   <-3.4028235E+38, ∞, NaN, -2.2, -1, 0, 1, 3>    # (FF7FFFFF 7F800000 FFC00000 C00CCCCD BF800000 00000000 3F800000 40400000)
Subtract(srcT, src2):   <-3.4028235E+38, ∞, NaN, -3.2, -2, -1, 0, 2>   # (FF7FFFFF 7F800000 FFC00000 C04CCCCD C0000000 BF800000 00000000 40000000)
Xor(srcT, src1):        <-7.9999995, 2, -3, -2.350989E-39, 1, 0, ∞, 1.7014118E+38>     # (C0FFFFFF 40000000 C0400000 8019999A 3F800000 00000000 7F800000 7F000000)
Xor(srcT, src2):        <-0.99999994, 1, -1.5, NaN, 2, ∞, 0, 1.1754944E-38>    # (BF7FFFFF 3F800000 BFC00000 FF99999A 40000000 7F800000 00000000 00800000)

-- Double, Vector<Double>.Count=4 --
srcT:   <-1.7976931348623157E+308, ∞, -1.2, 0> # (FFEFFFFFFFFFFFFF 7FF0000000000000 BFF3333333333333 0000000000000000)
srcAllOnes:     <NaN, NaN, NaN, NaN>    # (FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
Abs(srcT):      <1.7976931348623157E+308, ∞, 1.2, 0>   # (7FEFFFFFFFFFFFFF 7FF0000000000000 3FF3333333333333 0000000000000000)
Abs(srcAllOnes):        <NaN, NaN, NaN, NaN>    # (7FFFFFFFFFFFFFFF 7FFFFFFFFFFFFFFF 7FFFFFFFFFFFFFFF 7FFFFFFFFFFFFFFF)
Add(srcT, src1):        <-1.7976931348623157E+308, ∞, -0.19999999999999996, 1> # (FFEFFFFFFFFFFFFF 7FF0000000000000 BFC9999999999998 3FF0000000000000)
Add(srcT, src2):        <-1.7976931348623157E+308, ∞, 0.8, 2>  # (FFEFFFFFFFFFFFFF 7FF0000000000000 3FE999999999999A 4000000000000000)
AndNot(srcT, src1):     <-3.9999999999999996, 2, -4.4501477170144E-309, 0>      # (C00FFFFFFFFFFFFF 4000000000000000 8003333333333333 0000000000000000)
AndNot(srcT, src2):     <-0.9999999999999999, 1, -1.2, 0>       # (BFEFFFFFFFFFFFFF 3FF0000000000000 BFF3333333333333 0000000000000000)
BitwiseAnd(srcT, src1): <0.5, 1, 1, 0>  # (3FE0000000000000 3FF0000000000000 3FF0000000000000 0000000000000000)
BitwiseAnd(srcT, src2): <2, 2, 0, 0>    # (4000000000000000 4000000000000000 0000000000000000 0000000000000000)
BitwiseOr(srcT, src1):  <NaN, ∞, -1.2, 1>      # (FFFFFFFFFFFFFFFF 7FF0000000000000 BFF3333333333333 3FF0000000000000)
BitwiseOr(srcT, src2):  <-1.7976931348623157E+308, ∞, NaN, 2>  # (FFEFFFFFFFFFFFFF 7FF0000000000000 FFF3333333333333 4000000000000000)
Ceiling(srcT):  <-1.7976931348623157E+308, ∞, -1, 0>   # (FFEFFFFFFFFFFFFF 7FF0000000000000 BFF0000000000000 0000000000000000)
Divide(srcT, src2):     <-8.988465674311579E+307, ∞, -0.6, 0>  # (FFDFFFFFFFFFFFFF 7FF0000000000000 BFE3333333333333 0000000000000000)
Dot(srcT, src1):        ∞
Dot(srcT, src2):        NaN
Dot(src1, src2):        8
Equals(srcT, src0):     <0, 0, 0, NaN>  # (0000000000000000 0000000000000000 0000000000000000 FFFFFFFFFFFFFFFF)
Equals(srcT, src1):     <0, 0, 0, 0>    # (0000000000000000 0000000000000000 0000000000000000 0000000000000000)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
Floor(srcT):    <-1.7976931348623157E+308, ∞, -2, 0>   # (FFEFFFFFFFFFFFFF 7FF0000000000000 C000000000000000 0000000000000000)
GreaterThan(srcT, src0):        <0, NaN, 0, 0>  # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
GreaterThan(srcT, src1):        <0, NaN, 0, 0>  # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
GreaterThanOrEqual(srcT, src0): <0, NaN, 0, NaN>        # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF)
GreaterThanOrEqual(srcT, src1): <0, NaN, 0, 0>  # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
LessThan(srcT, src0):   <NaN, 0, NaN, 0>        # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000)
LessThan(srcT, src1):   <NaN, 0, NaN, NaN>      # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
LessThanOrEqual(srcT, src0):    <NaN, 0, NaN, NaN>      # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
LessThanOrEqual(srcT, src1):    <NaN, 0, NaN, NaN>      # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
Max(srcT, src0):        <0, ∞, 0, 0>   # (0000000000000000 7FF0000000000000 0000000000000000 0000000000000000)
Max(srcT, src2):        <2, ∞, 2, 2>   # (4000000000000000 7FF0000000000000 4000000000000000 4000000000000000)
Min(srcT, src0):        <-1.7976931348623157E+308, 0, -1.2, 0>  # (FFEFFFFFFFFFFFFF 0000000000000000 BFF3333333333333 0000000000000000)
Min(srcT, src2):        <-1.7976931348623157E+308, 2, -1.2, 0>  # (FFEFFFFFFFFFFFFF 4000000000000000 BFF3333333333333 0000000000000000)
Multiply(srcT, src2):   <-∞, ∞, -2.4, 0>      # (FFF0000000000000 7FF0000000000000 C003333333333333 0000000000000000)
Negate(srcT):   <1.7976931348623157E+308, -∞, 1.2, 0>  # (7FEFFFFFFFFFFFFF FFF0000000000000 3FF3333333333333 0000000000000000)
Negate(srcAllOnes):     <NaN, NaN, NaN, NaN>    # (FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
OnesComplement(srcT):   <2.2250738585072014E-308, -2.225073858507201E-308, 3.5999999999999996, NaN>     # (0010000000000000 800FFFFFFFFFFFFF 400CCCCCCCCCCCCC FFFFFFFFFFFFFFFF)
OnesComplement(srcAllOnes):     <0, 0, 0, 0>    # (0000000000000000 0000000000000000 0000000000000000 0000000000000000)
SquareRoot(srcT):       <NaN, ∞, NaN, 0>       # (FFF8000000000000 7FF0000000000000 FFF8000000000000 0000000000000000)
Subtract(srcT, src1):   <-1.7976931348623157E+308, ∞, -2.2, -1>        # (FFEFFFFFFFFFFFFF 7FF0000000000000 C00199999999999A BFF0000000000000)
Subtract(srcT, src2):   <-1.7976931348623157E+308, ∞, -3.2, -2>        # (FFEFFFFFFFFFFFFF 7FF0000000000000 C00999999999999A C000000000000000)
Xor(srcT, src1):        <-7.999999999999999, 2, -4.4501477170144E-309, 1>       # (C01FFFFFFFFFFFFF 4000000000000000 8003333333333333 3FF0000000000000)
Xor(srcT, src2):        <-0.9999999999999999, 1, NaN, 2>        # (BFEFFFFFFFFFFFFF 3FF0000000000000 FFF3333333333333 4000000000000000)

-- SByte, Vector<SByte>.Count=32 --
srcT:   <-128, 127, -1, 0, 1, 2, 3, 4, -128, 127, -1, 0, 1, 2, 3, 4, -128, 127, -1, 0, 1, 2, 3, 4, -128, 127, -1, 0, 1, 2, 3, 4>        # (80 7F FF 00 01 02 03 04 80 7F FF 00 01 02 03 04 80 7F FF 00 01 02 03 04 80 7F FF 00 01 02 03 04)
srcAllOnes:     <-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1>        # (FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF)
Abs(srcT):      <-128, 127, 1, 0, 1, 2, 3, 4, -128, 127, 1, 0, 1, 2, 3, 4, -128, 127, 1, 0, 1, 2, 3, 4, -128, 127, 1, 0, 1, 2, 3, 4>    # (80 7F 01 00 01 02 03 04 80 7F 01 00 01 02 03 04 80 7F 01 00 01 02 03 04 80 7F 01 00 01 02 03 04)
Abs(srcAllOnes):        <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1># (01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01)
Add(srcT, src1):        <-127, -128, 0, 1, 2, 3, 4, 5, -127, -128, 0, 1, 2, 3, 4, 5, -127, -128, 0, 1, 2, 3, 4, 5, -127, -128, 0, 1, 2, 3, 4, 5>        # (81 80 00 01 02 03 04 05 81 80 00 01 02 03 04 05 81 80 00 01 02 03 04 05 81 80 00 01 02 03 04 05)
Add(srcT, src2):        <-126, -127, 1, 2, 3, 4, 5, 6, -126, -127, 1, 2, 3, 4, 5, 6, -126, -127, 1, 2, 3, 4, 5, 6, -126, -127, 1, 2, 3, 4, 5, 6>        # (82 81 01 02 03 04 05 06 82 81 01 02 03 04 05 06 82 81 01 02 03 04 05 06 82 81 01 02 03 04 05 06)
AndNot(srcT, src1):     <-128, 126, -2, 0, 0, 2, 2, 4, -128, 126, -2, 0, 0, 2, 2, 4, -128, 126, -2, 0, 0, 2, 2, 4, -128, 126, -2, 0, 0, 2, 2, 4>        # (80 7E FE 00 00 02 02 04 80 7E FE 00 00 02 02 04 80 7E FE 00 00 02 02 04 80 7E FE 00 00 02 02 04)
AndNot(srcT, src2):     <-128, 125, -3, 0, 1, 0, 1, 4, -128, 125, -3, 0, 1, 0, 1, 4, -128, 125, -3, 0, 1, 0, 1, 4, -128, 125, -3, 0, 1, 0, 1, 4>        # (80 7D FD 00 01 00 01 04 80 7D FD 00 01 00 01 04 80 7D FD 00 01 00 01 04 80 7D FD 00 01 00 01 04)
BitwiseAnd(srcT, src1): <0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0># (00 01 01 00 01 00 01 00 00 01 01 00 01 00 01 00 00 01 01 00 01 00 01 00 00 01 01 00 01 00 01 00)
BitwiseAnd(srcT, src2): <0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0># (00 02 02 00 00 02 02 00 00 02 02 00 00 02 02 00 00 02 02 00 00 02 02 00 00 02 02 00 00 02 02 00)
BitwiseOr(srcT, src1):  <-127, 127, -1, 1, 1, 3, 3, 5, -127, 127, -1, 1, 1, 3, 3, 5, -127, 127, -1, 1, 1, 3, 3, 5, -127, 127, -1, 1, 1, 3, 3, 5>        # (81 7F FF 01 01 03 03 05 81 7F FF 01 01 03 03 05 81 7F FF 01 01 03 03 05 81 7F FF 01 01 03 03 05)
BitwiseOr(srcT, src2):  <-126, 127, -1, 2, 3, 2, 3, 6, -126, 127, -1, 2, 3, 2, 3, 6, -126, 127, -1, 2, 3, 2, 3, 6, -126, 127, -1, 2, 3, 2, 3, 6>        # (82 7F FF 02 03 02 03 06 82 7F FF 02 03 02 03 06 82 7F FF 02 03 02 03 06 82 7F FF 02 03 02 03 06)
Divide(srcT, src2):     <-64, 63, 0, 0, 0, 1, 1, 2, -64, 63, 0, 0, 0, 1, 1, 2, -64, 63, 0, 0, 0, 1, 1, 2, -64, 63, 0, 0, 0, 1, 1, 2>    # (C0 3F 00 00 00 01 01 02 C0 3F 00 00 00 01 01 02 C0 3F 00 00 00 01 01 02 C0 3F 00 00 00 01 01 02)
Dot(srcT, src1):        32
Dot(srcT, src2):        64
Dot(src1, src2):        64
Equals(srcT, src0):     <0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0>    # (00 00 00 FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 FF 00 00 00 00)
Equals(srcT, src1):     <0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0>    # (00 00 00 00 FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 FF 00 00 00 00 00 00 00 FF 00 00 00)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>    # (00 FF 00 00 FF FF FF FF 00 FF 00 00 FF FF FF FF 00 FF 00 00 FF FF FF FF 00 FF 00 00 FF FF FF FF)
GreaterThan(srcT, src1):        <0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1>        # (00 FF 00 00 00 FF FF FF 00 FF 00 00 00 FF FF FF 00 FF 00 00 00 FF FF FF 00 FF 00 00 00 FF FF FF)
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1>        # (00 FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF FF 00 FF 00 FF FF FF FF FF)
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>    # (00 FF 00 00 FF FF FF FF 00 FF 00 00 FF FF FF FF 00 FF 00 00 FF FF FF FF 00 FF 00 00 FF FF FF FF)
LessThan(srcT, src0):   <-1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0>        # (FF 00 FF 00 00 00 00 00 FF 00 FF 00 00 00 00 00 FF 00 FF 00 00 00 00 00 FF 00 FF 00 00 00 00 00)
LessThan(srcT, src1):   <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>    # (FF 00 FF FF 00 00 00 00 FF 00 FF FF 00 00 00 00 FF 00 FF FF 00 00 00 00 FF 00 FF FF 00 00 00 00)
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>    # (FF 00 FF FF 00 00 00 00 FF 00 FF FF 00 00 00 00 FF 00 FF FF 00 00 00 00 FF 00 FF FF 00 00 00 00)
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0>        # (FF 00 FF FF FF 00 00 00 FF 00 FF FF FF 00 00 00 FF 00 FF FF FF 00 00 00 FF 00 FF FF FF 00 00 00)
Max(srcT, src0):        <0, 127, 0, 0, 1, 2, 3, 4, 0, 127, 0, 0, 1, 2, 3, 4, 0, 127, 0, 0, 1, 2, 3, 4, 0, 127, 0, 0, 1, 2, 3, 4>        # (00 7F 00 00 01 02 03 04 00 7F 00 00 01 02 03 04 00 7F 00 00 01 02 03 04 00 7F 00 00 01 02 03 04)
Max(srcT, src2):        <2, 127, 2, 2, 2, 2, 3, 4, 2, 127, 2, 2, 2, 2, 3, 4, 2, 127, 2, 2, 2, 2, 3, 4, 2, 127, 2, 2, 2, 2, 3, 4>        # (02 7F 02 02 02 02 03 04 02 7F 02 02 02 02 03 04 02 7F 02 02 02 02 03 04 02 7F 02 02 02 02 03 04)
Min(srcT, src0):        <-128, 0, -1, 0, 0, 0, 0, 0, -128, 0, -1, 0, 0, 0, 0, 0, -128, 0, -1, 0, 0, 0, 0, 0, -128, 0, -1, 0, 0, 0, 0, 0>        # (80 00 FF 00 00 00 00 00 80 00 FF 00 00 00 00 00 80 00 FF 00 00 00 00 00 80 00 FF 00 00 00 00 00)
Min(srcT, src2):        <-128, 2, -1, 0, 1, 2, 2, 2, -128, 2, -1, 0, 1, 2, 2, 2, -128, 2, -1, 0, 1, 2, 2, 2, -128, 2, -1, 0, 1, 2, 2, 2>        # (80 02 FF 00 01 02 02 02 80 02 FF 00 01 02 02 02 80 02 FF 00 01 02 02 02 80 02 FF 00 01 02 02 02)
Multiply(srcT, src2):   <0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8>        # (00 FE FE 00 02 04 06 08 00 FE FE 00 02 04 06 08 00 FE FE 00 02 04 06 08 00 FE FE 00 02 04 06 08)
Negate(srcT):   <-128, -127, 1, 0, -1, -2, -3, -4, -128, -127, 1, 0, -1, -2, -3, -4, -128, -127, 1, 0, -1, -2, -3, -4, -128, -127, 1, 0, -1, -2, -3, -4>        # (80 81 01 00 FF FE FD FC 80 81 01 00 FF FE FD FC 80 81 01 00 FF FE FD FC 80 81 01 00 FF FE FD FC)
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1># (01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01)
OnesComplement(srcT):   <127, -128, 0, -1, -2, -3, -4, -5, 127, -128, 0, -1, -2, -3, -4, -5, 127, -128, 0, -1, -2, -3, -4, -5, 127, -128, 0, -1, -2, -3, -4, -5>        # (7F 80 00 FF FE FD FC FB 7F 80 00 FF FE FD FC FB 7F 80 00 FF FE FD FC FB 7F 80 00 FF FE FD FC FB)
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>        # (00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00)
SquareRoot(srcT):       <0, 11, 0, 0, 1, 1, 1, 2, 0, 11, 0, 0, 1, 1, 1, 2, 0, 11, 0, 0, 1, 1, 1, 2, 0, 11, 0, 0, 1, 1, 1, 2>    # (00 0B 00 00 01 01 01 02 00 0B 00 00 01 01 01 02 00 0B 00 00 01 01 01 02 00 0B 00 00 01 01 01 02)
Subtract(srcT, src1):   <127, 126, -2, -1, 0, 1, 2, 3, 127, 126, -2, -1, 0, 1, 2, 3, 127, 126, -2, -1, 0, 1, 2, 3, 127, 126, -2, -1, 0, 1, 2, 3>        # (7F 7E FE FF 00 01 02 03 7F 7E FE FF 00 01 02 03 7F 7E FE FF 00 01 02 03 7F 7E FE FF 00 01 02 03)
Subtract(srcT, src2):   <126, 125, -3, -2, -1, 0, 1, 2, 126, 125, -3, -2, -1, 0, 1, 2, 126, 125, -3, -2, -1, 0, 1, 2, 126, 125, -3, -2, -1, 0, 1, 2>    # (7E 7D FD FE FF 00 01 02 7E 7D FD FE FF 00 01 02 7E 7D FD FE FF 00 01 02 7E 7D FD FE FF 00 01 02)
Xor(srcT, src1):        <-127, 126, -2, 1, 0, 3, 2, 5, -127, 126, -2, 1, 0, 3, 2, 5, -127, 126, -2, 1, 0, 3, 2, 5, -127, 126, -2, 1, 0, 3, 2, 5>        # (81 7E FE 01 00 03 02 05 81 7E FE 01 00 03 02 05 81 7E FE 01 00 03 02 05 81 7E FE 01 00 03 02 05)
Xor(srcT, src2):        <-126, 125, -3, 2, 3, 0, 1, 6, -126, 125, -3, 2, 3, 0, 1, 6, -126, 125, -3, 2, 3, 0, 1, 6, -126, 125, -3, 2, 3, 0, 1, 6>        # (82 7D FD 02 03 00 01 06 82 7D FD 02 03 00 01 06 82 7D FD 02 03 00 01 06 82 7D FD 02 03 00 01 06)

-- Int16, Vector<Int16>.Count=16 --
srcT:   <-32768, 32767, -1, 0, 1, 2, 3, 4, -32768, 32767, -1, 0, 1, 2, 3, 4>    # (8000 7FFF FFFF 0000 0001 0002 0003 0004 8000 7FFF FFFF 0000 0001 0002 0003 0004)
srcAllOnes:     <-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1>        # (FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF)
Abs(srcT):      <-32768, 32767, 1, 0, 1, 2, 3, 4, -32768, 32767, 1, 0, 1, 2, 3, 4>      # (8000 7FFF 0001 0000 0001 0002 0003 0004 8000 7FFF 0001 0000 0001 0002 0003 0004)
Abs(srcAllOnes):        <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>        # (0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001)
Add(srcT, src1):        <-32767, -32768, 0, 1, 2, 3, 4, 5, -32767, -32768, 0, 1, 2, 3, 4, 5>    # (8001 8000 0000 0001 0002 0003 0004 0005 8001 8000 0000 0001 0002 0003 0004 0005)
Add(srcT, src2):        <-32766, -32767, 1, 2, 3, 4, 5, 6, -32766, -32767, 1, 2, 3, 4, 5, 6>    # (8002 8001 0001 0002 0003 0004 0005 0006 8002 8001 0001 0002 0003 0004 0005 0006)
AndNot(srcT, src1):     <-32768, 32766, -2, 0, 0, 2, 2, 4, -32768, 32766, -2, 0, 0, 2, 2, 4>    # (8000 7FFE FFFE 0000 0000 0002 0002 0004 8000 7FFE FFFE 0000 0000 0002 0002 0004)
AndNot(srcT, src2):     <-32768, 32765, -3, 0, 1, 0, 1, 4, -32768, 32765, -3, 0, 1, 0, 1, 4>    # (8000 7FFD FFFD 0000 0001 0000 0001 0004 8000 7FFD FFFD 0000 0001 0000 0001 0004)
BitwiseAnd(srcT, src1): <0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0>        # (0000 0001 0001 0000 0001 0000 0001 0000 0000 0001 0001 0000 0001 0000 0001 0000)
BitwiseAnd(srcT, src2): <0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0>        # (0000 0002 0002 0000 0000 0002 0002 0000 0000 0002 0002 0000 0000 0002 0002 0000)
BitwiseOr(srcT, src1):  <-32767, 32767, -1, 1, 1, 3, 3, 5, -32767, 32767, -1, 1, 1, 3, 3, 5>    # (8001 7FFF FFFF 0001 0001 0003 0003 0005 8001 7FFF FFFF 0001 0001 0003 0003 0005)
BitwiseOr(srcT, src2):  <-32766, 32767, -1, 2, 3, 2, 3, 6, -32766, 32767, -1, 2, 3, 2, 3, 6>    # (8002 7FFF FFFF 0002 0003 0002 0003 0006 8002 7FFF FFFF 0002 0003 0002 0003 0006)
Divide(srcT, src2):     <-16384, 16383, 0, 0, 0, 1, 1, 2, -16384, 16383, 0, 0, 0, 1, 1, 2>      # (C000 3FFF 0000 0000 0000 0001 0001 0002 C000 3FFF 0000 0000 0000 0001 0001 0002)
Dot(srcT, src1):        16
Dot(srcT, src2):        32
Dot(src1, src2):        32
Equals(srcT, src0):     <0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0>      # (0000 0000 0000 FFFF 0000 0000 0000 0000 0000 0000 0000 FFFF 0000 0000 0000 0000)
Equals(srcT, src1):     <0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0>      # (0000 0000 0000 0000 FFFF 0000 0000 0000 0000 0000 0000 0000 FFFF 0000 0000 0000)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>      # (0000 FFFF 0000 0000 FFFF FFFF FFFF FFFF 0000 FFFF 0000 0000 FFFF FFFF FFFF FFFF)
GreaterThan(srcT, src1):        <0, -1, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1>        # (0000 FFFF 0000 0000 0000 FFFF FFFF FFFF 0000 FFFF 0000 0000 0000 FFFF FFFF FFFF)
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, -1>    # (0000 FFFF 0000 FFFF FFFF FFFF FFFF FFFF 0000 FFFF 0000 FFFF FFFF FFFF FFFF FFFF)
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, -1, -1>      # (0000 FFFF 0000 0000 FFFF FFFF FFFF FFFF 0000 FFFF 0000 0000 FFFF FFFF FFFF FFFF)
LessThan(srcT, src0):   <-1, 0, -1, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0>    # (FFFF 0000 FFFF 0000 0000 0000 0000 0000 FFFF 0000 FFFF 0000 0000 0000 0000 0000)
LessThan(srcT, src1):   <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>  # (FFFF 0000 FFFF FFFF 0000 0000 0000 0000 FFFF 0000 FFFF FFFF 0000 0000 0000 0000)
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0>  # (FFFF 0000 FFFF FFFF 0000 0000 0000 0000 FFFF 0000 FFFF FFFF 0000 0000 0000 0000)
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0>        # (FFFF 0000 FFFF FFFF FFFF 0000 0000 0000 FFFF 0000 FFFF FFFF FFFF 0000 0000 0000)
Max(srcT, src0):        <0, 32767, 0, 0, 1, 2, 3, 4, 0, 32767, 0, 0, 1, 2, 3, 4>        # (0000 7FFF 0000 0000 0001 0002 0003 0004 0000 7FFF 0000 0000 0001 0002 0003 0004)
Max(srcT, src2):        <2, 32767, 2, 2, 2, 2, 3, 4, 2, 32767, 2, 2, 2, 2, 3, 4>        # (0002 7FFF 0002 0002 0002 0002 0003 0004 0002 7FFF 0002 0002 0002 0002 0003 0004)
Min(srcT, src0):        <-32768, 0, -1, 0, 0, 0, 0, 0, -32768, 0, -1, 0, 0, 0, 0, 0>    # (8000 0000 FFFF 0000 0000 0000 0000 0000 8000 0000 FFFF 0000 0000 0000 0000 0000)
Min(srcT, src2):        <-32768, 2, -1, 0, 1, 2, 2, 2, -32768, 2, -1, 0, 1, 2, 2, 2>    # (8000 0002 FFFF 0000 0001 0002 0002 0002 8000 0002 FFFF 0000 0001 0002 0002 0002)
Multiply(srcT, src2):   <0, -2, -2, 0, 2, 4, 6, 8, 0, -2, -2, 0, 2, 4, 6, 8>    # (0000 FFFE FFFE 0000 0002 0004 0006 0008 0000 FFFE FFFE 0000 0002 0004 0006 0008)
Negate(srcT):   <-32768, -32767, 1, 0, -1, -2, -3, -4, -32768, -32767, 1, 0, -1, -2, -3, -4>    # (8000 8001 0001 0000 FFFF FFFE FFFD FFFC 8000 8001 0001 0000 FFFF FFFE FFFD FFFC)
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>        # (0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001)
OnesComplement(srcT):   <32767, -32768, 0, -1, -2, -3, -4, -5, 32767, -32768, 0, -1, -2, -3, -4, -5>    # (7FFF 8000 0000 FFFF FFFE FFFD FFFC FFFB 7FFF 8000 0000 FFFF FFFE FFFD FFFC FFFB)
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>        # (0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000)
SquareRoot(srcT):       <0, 181, 0, 0, 1, 1, 1, 2, 0, 181, 0, 0, 1, 1, 1, 2>    # (0000 00B5 0000 0000 0001 0001 0001 0002 0000 00B5 0000 0000 0001 0001 0001 0002)
Subtract(srcT, src1):   <32767, 32766, -2, -1, 0, 1, 2, 3, 32767, 32766, -2, -1, 0, 1, 2, 3>    # (7FFF 7FFE FFFE FFFF 0000 0001 0002 0003 7FFF 7FFE FFFE FFFF 0000 0001 0002 0003)
Subtract(srcT, src2):   <32766, 32765, -3, -2, -1, 0, 1, 2, 32766, 32765, -3, -2, -1, 0, 1, 2>  # (7FFE 7FFD FFFD FFFE FFFF 0000 0001 0002 7FFE 7FFD FFFD FFFE FFFF 0000 0001 0002)
Xor(srcT, src1):        <-32767, 32766, -2, 1, 0, 3, 2, 5, -32767, 32766, -2, 1, 0, 3, 2, 5>    # (8001 7FFE FFFE 0001 0000 0003 0002 0005 8001 7FFE FFFE 0001 0000 0003 0002 0005)
Xor(srcT, src2):        <-32766, 32765, -3, 2, 3, 0, 1, 6, -32766, 32765, -3, 2, 3, 0, 1, 6>    # (8002 7FFD FFFD 0002 0003 0000 0001 0006 8002 7FFD FFFD 0002 0003 0000 0001 0006)

-- Int32, Vector<Int32>.Count=8 --
srcT:   <-2147483648, 2147483647, -1, 0, 1, 2, 3, 4>    # (80000000 7FFFFFFF FFFFFFFF 00000000 00000001 00000002 00000003 00000004)
srcAllOnes:     <-1, -1, -1, -1, -1, -1, -1, -1>        # (FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
Abs(srcT):      <-2147483648, 2147483647, 1, 0, 1, 2, 3, 4>     # (80000000 7FFFFFFF 00000001 00000000 00000001 00000002 00000003 00000004)
Abs(srcAllOnes):        <1, 1, 1, 1, 1, 1, 1, 1>        # (00000001 00000001 00000001 00000001 00000001 00000001 00000001 00000001)
Add(srcT, src1):        <-2147483647, -2147483648, 0, 1, 2, 3, 4, 5>    # (80000001 80000000 00000000 00000001 00000002 00000003 00000004 00000005)
Add(srcT, src2):        <-2147483646, -2147483647, 1, 2, 3, 4, 5, 6>    # (80000002 80000001 00000001 00000002 00000003 00000004 00000005 00000006)
AndNot(srcT, src1):     <-2147483648, 2147483646, -2, 0, 0, 2, 2, 4>    # (80000000 7FFFFFFE FFFFFFFE 00000000 00000000 00000002 00000002 00000004)
AndNot(srcT, src2):     <-2147483648, 2147483645, -3, 0, 1, 0, 1, 4>    # (80000000 7FFFFFFD FFFFFFFD 00000000 00000001 00000000 00000001 00000004)
BitwiseAnd(srcT, src1): <0, 1, 1, 0, 1, 0, 1, 0>        # (00000000 00000001 00000001 00000000 00000001 00000000 00000001 00000000)
BitwiseAnd(srcT, src2): <0, 2, 2, 0, 0, 2, 2, 0>        # (00000000 00000002 00000002 00000000 00000000 00000002 00000002 00000000)
BitwiseOr(srcT, src1):  <-2147483647, 2147483647, -1, 1, 1, 3, 3, 5>    # (80000001 7FFFFFFF FFFFFFFF 00000001 00000001 00000003 00000003 00000005)
BitwiseOr(srcT, src2):  <-2147483646, 2147483647, -1, 2, 3, 2, 3, 6>    # (80000002 7FFFFFFF FFFFFFFF 00000002 00000003 00000002 00000003 00000006)
Divide(srcT, src2):     <-1073741824, 1073741823, 0, 0, 0, 1, 1, 2>     # (C0000000 3FFFFFFF 00000000 00000000 00000000 00000001 00000001 00000002)
Dot(srcT, src1):        8
Dot(srcT, src2):        16
Dot(src1, src2):        16
Equals(srcT, src0):     <0, 0, 0, -1, 0, 0, 0, 0>       # (00000000 00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000)
Equals(srcT, src1):     <0, 0, 0, 0, -1, 0, 0, 0>       # (00000000 00000000 00000000 00000000 FFFFFFFF 00000000 00000000 00000000)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0, -1, -1, -1, -1>   # (00000000 FFFFFFFF 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
GreaterThan(srcT, src1):        <0, -1, 0, 0, 0, -1, -1, -1>    # (00000000 FFFFFFFF 00000000 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF)
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1, -1, -1, -1, -1>  # (00000000 FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0, -1, -1, -1, -1>   # (00000000 FFFFFFFF 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
LessThan(srcT, src0):   <-1, 0, -1, 0, 0, 0, 0, 0>      # (FFFFFFFF 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 00000000)
LessThan(srcT, src1):   <-1, 0, -1, -1, 0, 0, 0, 0>     # (FFFFFFFF 00000000 FFFFFFFF FFFFFFFF 00000000 00000000 00000000 00000000)
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1, 0, 0, 0, 0>     # (FFFFFFFF 00000000 FFFFFFFF FFFFFFFF 00000000 00000000 00000000 00000000)
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1, -1, 0, 0, 0>    # (FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF 00000000 00000000 00000000)
Max(srcT, src0):        <0, 2147483647, 0, 0, 1, 2, 3, 4>       # (00000000 7FFFFFFF 00000000 00000000 00000001 00000002 00000003 00000004)
Max(srcT, src2):        <2, 2147483647, 2, 2, 2, 2, 3, 4>       # (00000002 7FFFFFFF 00000002 00000002 00000002 00000002 00000003 00000004)
Min(srcT, src0):        <-2147483648, 0, -1, 0, 0, 0, 0, 0>     # (80000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 00000000)
Min(srcT, src2):        <-2147483648, 2, -1, 0, 1, 2, 2, 2>     # (80000000 00000002 FFFFFFFF 00000000 00000001 00000002 00000002 00000002)
Multiply(srcT, src2):   <0, -2, -2, 0, 2, 4, 6, 8>      # (00000000 FFFFFFFE FFFFFFFE 00000000 00000002 00000004 00000006 00000008)
Negate(srcT):   <-2147483648, -2147483647, 1, 0, -1, -2, -3, -4>        # (80000000 80000001 00000001 00000000 FFFFFFFF FFFFFFFE FFFFFFFD FFFFFFFC)
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1>        # (00000001 00000001 00000001 00000001 00000001 00000001 00000001 00000001)
OnesComplement(srcT):   <2147483647, -2147483648, 0, -1, -2, -3, -4, -5>        # (7FFFFFFF 80000000 00000000 FFFFFFFF FFFFFFFE FFFFFFFD FFFFFFFC FFFFFFFB)
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0>        # (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
SquareRoot(srcT):       <-2147483648, 46340, -2147483648, 0, 1, 1, 1, 2>        # (80000000 0000B504 80000000 00000000 00000001 00000001 00000001 00000002)
Subtract(srcT, src1):   <2147483647, 2147483646, -2, -1, 0, 1, 2, 3>    # (7FFFFFFF 7FFFFFFE FFFFFFFE FFFFFFFF 00000000 00000001 00000002 00000003)
Subtract(srcT, src2):   <2147483646, 2147483645, -3, -2, -1, 0, 1, 2>   # (7FFFFFFE 7FFFFFFD FFFFFFFD FFFFFFFE FFFFFFFF 00000000 00000001 00000002)
Xor(srcT, src1):        <-2147483647, 2147483646, -2, 1, 0, 3, 2, 5>    # (80000001 7FFFFFFE FFFFFFFE 00000001 00000000 00000003 00000002 00000005)
Xor(srcT, src2):        <-2147483646, 2147483645, -3, 2, 3, 0, 1, 6>    # (80000002 7FFFFFFD FFFFFFFD 00000002 00000003 00000000 00000001 00000006)

-- Int64, Vector<Int64>.Count=4 --
srcT:   <-9223372036854775808, 9223372036854775807, -1, 0>      # (8000000000000000 7FFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF 0000000000000000)
srcAllOnes:     <-1, -1, -1, -1>        # (FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
Abs(srcT):      <-9223372036854775808, 9223372036854775807, 1, 0>       # (8000000000000000 7FFFFFFFFFFFFFFF 0000000000000001 0000000000000000)
Abs(srcAllOnes):        <1, 1, 1, 1>    # (0000000000000001 0000000000000001 0000000000000001 0000000000000001)
Add(srcT, src1):        <-9223372036854775807, -9223372036854775808, 0, 1>      # (8000000000000001 8000000000000000 0000000000000000 0000000000000001)
Add(srcT, src2):        <-9223372036854775806, -9223372036854775807, 1, 2>      # (8000000000000002 8000000000000001 0000000000000001 0000000000000002)
AndNot(srcT, src1):     <-9223372036854775808, 9223372036854775806, -2, 0>      # (8000000000000000 7FFFFFFFFFFFFFFE FFFFFFFFFFFFFFFE 0000000000000000)
AndNot(srcT, src2):     <-9223372036854775808, 9223372036854775805, -3, 0>      # (8000000000000000 7FFFFFFFFFFFFFFD FFFFFFFFFFFFFFFD 0000000000000000)
BitwiseAnd(srcT, src1): <0, 1, 1, 0>    # (0000000000000000 0000000000000001 0000000000000001 0000000000000000)
BitwiseAnd(srcT, src2): <0, 2, 2, 0>    # (0000000000000000 0000000000000002 0000000000000002 0000000000000000)
BitwiseOr(srcT, src1):  <-9223372036854775807, 9223372036854775807, -1, 1>      # (8000000000000001 7FFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF 0000000000000001)
BitwiseOr(srcT, src2):  <-9223372036854775806, 9223372036854775807, -1, 2>      # (8000000000000002 7FFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF 0000000000000002)
Divide(srcT, src2):     <-4611686018427387904, 4611686018427387903, 0, 0>       # (C000000000000000 3FFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
Dot(srcT, src1):        -2
Dot(srcT, src2):        -4
Dot(src1, src2):        8
Equals(srcT, src0):     <0, 0, 0, -1>   # (0000000000000000 0000000000000000 0000000000000000 FFFFFFFFFFFFFFFF)
Equals(srcT, src1):     <0, 0, 0, 0>    # (0000000000000000 0000000000000000 0000000000000000 0000000000000000)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, -1, 0, 0>   # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
GreaterThan(srcT, src1):        <0, -1, 0, 0>   # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
GreaterThanOrEqual(srcT, src0): <0, -1, 0, -1>  # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF)
GreaterThanOrEqual(srcT, src1): <0, -1, 0, 0>   # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
LessThan(srcT, src0):   <-1, 0, -1, 0>  # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000)
LessThan(srcT, src1):   <-1, 0, -1, -1> # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
LessThanOrEqual(srcT, src0):    <-1, 0, -1, -1> # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
LessThanOrEqual(srcT, src1):    <-1, 0, -1, -1> # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
Max(srcT, src0):        <0, 9223372036854775807, 0, 0>  # (0000000000000000 7FFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
Max(srcT, src2):        <2, 9223372036854775807, 2, 2>  # (0000000000000002 7FFFFFFFFFFFFFFF 0000000000000002 0000000000000002)
Min(srcT, src0):        <-9223372036854775808, 0, -1, 0>        # (8000000000000000 0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000)
Min(srcT, src2):        <-9223372036854775808, 2, -1, 0>        # (8000000000000000 0000000000000002 FFFFFFFFFFFFFFFF 0000000000000000)
Multiply(srcT, src2):   <0, -2, -2, 0>  # (0000000000000000 FFFFFFFFFFFFFFFE FFFFFFFFFFFFFFFE 0000000000000000)
Negate(srcT):   <-9223372036854775808, -9223372036854775807, 1, 0>      # (8000000000000000 8000000000000001 0000000000000001 0000000000000000)
Negate(srcAllOnes):     <1, 1, 1, 1>    # (0000000000000001 0000000000000001 0000000000000001 0000000000000001)
OnesComplement(srcT):   <9223372036854775807, -9223372036854775808, 0, -1>      # (7FFFFFFFFFFFFFFF 8000000000000000 0000000000000000 FFFFFFFFFFFFFFFF)
OnesComplement(srcAllOnes):     <0, 0, 0, 0>    # (0000000000000000 0000000000000000 0000000000000000 0000000000000000)
SquareRoot(srcT):       <-9223372036854775808, 3037000499, -9223372036854775808, 0>     # (8000000000000000 00000000B504F333 8000000000000000 0000000000000000)
Subtract(srcT, src1):   <9223372036854775807, 9223372036854775806, -2, -1>      # (7FFFFFFFFFFFFFFF 7FFFFFFFFFFFFFFE FFFFFFFFFFFFFFFE FFFFFFFFFFFFFFFF)
Subtract(srcT, src2):   <9223372036854775806, 9223372036854775805, -3, -2>      # (7FFFFFFFFFFFFFFE 7FFFFFFFFFFFFFFD FFFFFFFFFFFFFFFD FFFFFFFFFFFFFFFE)
Xor(srcT, src1):        <-9223372036854775807, 9223372036854775806, -2, 1>      # (8000000000000001 7FFFFFFFFFFFFFFE FFFFFFFFFFFFFFFE 0000000000000001)
Xor(srcT, src2):        <-9223372036854775806, 9223372036854775805, -3, 2>      # (8000000000000002 7FFFFFFFFFFFFFFD FFFFFFFFFFFFFFFD 0000000000000002)

-- Byte, Vector<Byte>.Count=32 --
srcT:   <0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1>     # (00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01)
srcAllOnes:     <255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255>        # (FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF)
Abs(srcT):      <0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1>      # (00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01)
Abs(srcAllOnes):        <255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255>        # (FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF)
Add(srcT, src1):        <1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2># (01 00 01 02 03 04 05 01 00 01 02 03 04 05 01 00 01 02 03 04 05 01 00 01 02 03 04 05 01 00 01 02)
Add(srcT, src2):        <2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3># (02 01 02 03 04 05 06 02 01 02 03 04 05 06 02 01 02 03 04 05 06 02 01 02 03 04 05 06 02 01 02 03)
AndNot(srcT, src1):     <0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0, 2, 2, 4, 0, 254, 0, 0>      # (00 FE 00 00 02 02 04 00 FE 00 00 02 02 04 00 FE 00 00 02 02 04 00 FE 00 00 02 02 04 00 FE 00 00)
AndNot(srcT, src2):     <0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1, 0, 1, 4, 0, 253, 0, 1>      # (00 FD 00 01 00 01 04 00 FD 00 01 00 01 04 00 FD 00 01 00 01 04 00 FD 00 01 00 01 04 00 FD 00 01)
BitwiseAnd(srcT, src1): <0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1># (00 01 00 01 00 01 00 00 01 00 01 00 01 00 00 01 00 01 00 01 00 00 01 00 01 00 01 00 00 01 00 01)
BitwiseAnd(srcT, src2): <0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0># (00 02 00 00 02 02 00 00 02 00 00 02 02 00 00 02 00 00 02 02 00 00 02 00 00 02 02 00 00 02 00 00)
BitwiseOr(srcT, src1):  <1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1, 3, 3, 5, 1, 255, 1, 1>      # (01 FF 01 01 03 03 05 01 FF 01 01 03 03 05 01 FF 01 01 03 03 05 01 FF 01 01 03 03 05 01 FF 01 01)
BitwiseOr(srcT, src2):  <2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3, 2, 3, 6, 2, 255, 2, 3>      # (02 FF 02 03 02 03 06 02 FF 02 03 02 03 06 02 FF 02 03 02 03 06 02 FF 02 03 02 03 06 02 FF 02 03)
Divide(srcT, src2):     <0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0, 1, 1, 2, 0, 127, 0, 0>      # (00 7F 00 00 01 01 02 00 7F 00 00 01 01 02 00 7F 00 00 01 01 02 00 7F 00 00 01 01 02 00 7F 00 00)
Dot(srcT, src1):        36
Dot(srcT, src2):        72
Dot(src1, src2):        64
Equals(srcT, src0):     <255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0>    # (FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00)
Equals(srcT, src1):     <0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 255>      # (00 00 00 FF 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF 00 00 00 00 00 00 FF)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255>    # (00 FF 00 FF FF FF FF 00 FF 00 FF FF FF FF 00 FF 00 FF FF FF FF 00 FF 00 FF FF FF FF 00 FF 00 FF)
GreaterThan(srcT, src1):        <0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0, 255, 255, 255, 0, 255, 0, 0>      # (00 FF 00 00 FF FF FF 00 FF 00 00 FF FF FF 00 FF 00 00 FF FF FF 00 FF 00 00 FF FF FF 00 FF 00 00)
GreaterThanOrEqual(srcT, src0): <255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255>        # (FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF)
GreaterThanOrEqual(srcT, src1): <0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255, 255, 255, 255, 0, 255, 0, 255>    # (00 FF 00 FF FF FF FF 00 FF 00 FF FF FF FF 00 FF 00 FF FF FF FF 00 FF 00 FF FF FF FF 00 FF 00 FF)
LessThan(srcT, src0):   <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0># (00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00)
LessThan(srcT, src1):   <255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0>    # (FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00)
LessThanOrEqual(srcT, src0):    <255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 255, 0, 255, 0>    # (FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00 00 00 00 FF 00 FF 00)
LessThanOrEqual(srcT, src1):    <255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255, 0, 0, 0, 255, 0, 255, 255>  # (FF 00 FF FF 00 00 00 FF 00 FF FF 00 00 00 FF 00 FF FF 00 00 00 FF 00 FF FF 00 00 00 FF 00 FF FF)
Max(srcT, src0):        <0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1, 2, 3, 4, 0, 255, 0, 1>      # (00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01 02 03 04 00 FF 00 01)
Max(srcT, src2):        <2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2, 2, 3, 4, 2, 255, 2, 2>      # (02 FF 02 02 02 03 04 02 FF 02 02 02 03 04 02 FF 02 02 02 03 04 02 FF 02 02 02 03 04 02 FF 02 02)
Min(srcT, src0):        <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0># (00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00)
Min(srcT, src2):        <0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1># (00 02 00 01 02 02 02 00 02 00 01 02 02 02 00 02 00 01 02 02 02 00 02 00 01 02 02 02 00 02 00 01)
Multiply(srcT, src2):   <0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2, 4, 6, 8, 0, 254, 0, 2>      # (00 FE 00 02 04 06 08 00 FE 00 02 04 06 08 00 FE 00 02 04 06 08 00 FE 00 02 04 06 08 00 FE 00 02)
Negate(srcT):   <0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255, 254, 253, 252, 0, 1, 0, 255>      # (00 01 00 FF FE FD FC 00 01 00 FF FE FD FC 00 01 00 FF FE FD FC 00 01 00 FF FE FD FC 00 01 00 FF)
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1># (01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01)
OnesComplement(srcT):   <255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254, 253, 252, 251, 255, 0, 255, 254>  # (FF 00 FF FE FD FC FB FF 00 FF FE FD FC FB FF 00 FF FE FD FC FB FF 00 FF FE FD FC FB FF 00 FF FE)
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>        # (00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00)
SquareRoot(srcT):       <0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1, 1, 1, 2, 0, 15, 0, 1>   # (00 0F 00 01 01 01 02 00 0F 00 01 01 01 02 00 0F 00 01 01 01 02 00 0F 00 01 01 01 02 00 0F 00 01)
Subtract(srcT, src1):   <255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0, 1, 2, 3, 255, 254, 255, 0>  # (FF FE FF 00 01 02 03 FF FE FF 00 01 02 03 FF FE FF 00 01 02 03 FF FE FF 00 01 02 03 FF FE FF 00)
Subtract(srcT, src2):   <254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255, 0, 1, 2, 254, 253, 254, 255>        # (FE FD FE FF 00 01 02 FE FD FE FF 00 01 02 FE FD FE FF 00 01 02 FE FD FE FF 00 01 02 FE FD FE FF)
Xor(srcT, src1):        <1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0, 3, 2, 5, 1, 254, 1, 0>      # (01 FE 01 00 03 02 05 01 FE 01 00 03 02 05 01 FE 01 00 03 02 05 01 FE 01 00 03 02 05 01 FE 01 00)
Xor(srcT, src2):        <2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3, 0, 1, 6, 2, 253, 2, 3>      # (02 FD 02 03 00 01 06 02 FD 02 03 00 01 06 02 FD 02 03 00 01 06 02 FD 02 03 00 01 06 02 FD 02 03)

-- UInt16, Vector<UInt16>.Count=16 --
srcT:   <0, 65535, 0, 1, 2, 3, 4, 0, 65535, 0, 1, 2, 3, 4, 0, 65535>    # (0000 FFFF 0000 0001 0002 0003 0004 0000 FFFF 0000 0001 0002 0003 0004 0000 FFFF)
srcAllOnes:     <65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535>        # (FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF)
Abs(srcT):      <0, 65535, 0, 1, 2, 3, 4, 0, 65535, 0, 1, 2, 3, 4, 0, 65535>    # (0000 FFFF 0000 0001 0002 0003 0004 0000 FFFF 0000 0001 0002 0003 0004 0000 FFFF)
Abs(srcAllOnes):        <65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535>        # (FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF)
Add(srcT, src1):        <1, 0, 1, 2, 3, 4, 5, 1, 0, 1, 2, 3, 4, 5, 1, 0>        # (0001 0000 0001 0002 0003 0004 0005 0001 0000 0001 0002 0003 0004 0005 0001 0000)
Add(srcT, src2):        <2, 1, 2, 3, 4, 5, 6, 2, 1, 2, 3, 4, 5, 6, 2, 1>        # (0002 0001 0002 0003 0004 0005 0006 0002 0001 0002 0003 0004 0005 0006 0002 0001)
AndNot(srcT, src1):     <0, 65534, 0, 0, 2, 2, 4, 0, 65534, 0, 0, 2, 2, 4, 0, 65534>    # (0000 FFFE 0000 0000 0002 0002 0004 0000 FFFE 0000 0000 0002 0002 0004 0000 FFFE)
AndNot(srcT, src2):     <0, 65533, 0, 1, 0, 1, 4, 0, 65533, 0, 1, 0, 1, 4, 0, 65533>    # (0000 FFFD 0000 0001 0000 0001 0004 0000 FFFD 0000 0001 0000 0001 0004 0000 FFFD)
BitwiseAnd(srcT, src1): <0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1>        # (0000 0001 0000 0001 0000 0001 0000 0000 0001 0000 0001 0000 0001 0000 0000 0001)
BitwiseAnd(srcT, src2): <0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2>        # (0000 0002 0000 0000 0002 0002 0000 0000 0002 0000 0000 0002 0002 0000 0000 0002)
BitwiseOr(srcT, src1):  <1, 65535, 1, 1, 3, 3, 5, 1, 65535, 1, 1, 3, 3, 5, 1, 65535>    # (0001 FFFF 0001 0001 0003 0003 0005 0001 FFFF 0001 0001 0003 0003 0005 0001 FFFF)
BitwiseOr(srcT, src2):  <2, 65535, 2, 3, 2, 3, 6, 2, 65535, 2, 3, 2, 3, 6, 2, 65535>    # (0002 FFFF 0002 0003 0002 0003 0006 0002 FFFF 0002 0003 0002 0003 0006 0002 FFFF)
Divide(srcT, src2):     <0, 32767, 0, 0, 1, 1, 2, 0, 32767, 0, 0, 1, 1, 2, 0, 32767>    # (0000 7FFF 0000 0000 0001 0001 0002 0000 7FFF 0000 0000 0001 0001 0002 0000 7FFF)
Dot(srcT, src1):        17
Dot(srcT, src2):        34
Dot(src1, src2):        32
Equals(srcT, src0):     <65535, 0, 65535, 0, 0, 0, 0, 65535, 0, 65535, 0, 0, 0, 0, 65535, 0>    # (FFFF 0000 FFFF 0000 0000 0000 0000 FFFF 0000 FFFF 0000 0000 0000 0000 FFFF 0000)
Equals(srcT, src1):     <0, 0, 0, 65535, 0, 0, 0, 0, 0, 0, 65535, 0, 0, 0, 0, 0>        # (0000 0000 0000 FFFF 0000 0000 0000 0000 0000 0000 FFFF 0000 0000 0000 0000 0000)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535>    # (0000 FFFF 0000 FFFF FFFF FFFF FFFF 0000 FFFF 0000 FFFF FFFF FFFF FFFF 0000 FFFF)
GreaterThan(srcT, src1):        <0, 65535, 0, 0, 65535, 65535, 65535, 0, 65535, 0, 0, 65535, 65535, 65535, 0, 65535>   # (0000 FFFF 0000 0000 FFFF FFFF FFFF 0000 FFFF 0000 0000 FFFF FFFF FFFF 0000 FFFF)
GreaterThanOrEqual(srcT, src0): <65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535>        # (FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF FFFF)
GreaterThanOrEqual(srcT, src1): <0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535, 0, 65535, 65535, 65535, 65535, 0, 65535>    # (0000 FFFF 0000 FFFF FFFF FFFF FFFF 0000 FFFF 0000 FFFF FFFF FFFF FFFF 0000 FFFF)
LessThan(srcT, src0):   <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>        # (0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000)
LessThan(srcT, src1):   <65535, 0, 65535, 0, 0, 0, 0, 65535, 0, 65535, 0, 0, 0, 0, 65535, 0>    # (FFFF 0000 FFFF 0000 0000 0000 0000 FFFF 0000 FFFF 0000 0000 0000 0000 FFFF 0000)
LessThanOrEqual(srcT, src0):    <65535, 0, 65535, 0, 0, 0, 0, 65535, 0, 65535, 0, 0, 0, 0, 65535, 0>    # (FFFF 0000 FFFF 0000 0000 0000 0000 FFFF 0000 FFFF 0000 0000 0000 0000 FFFF 0000)
LessThanOrEqual(srcT, src1):    <65535, 0, 65535, 65535, 0, 0, 0, 65535, 0, 65535, 65535, 0, 0, 0, 65535, 0>    # (FFFF 0000 FFFF FFFF 0000 0000 0000 FFFF 0000 FFFF FFFF 0000 0000 0000 FFFF 0000)
Max(srcT, src0):        <0, 65535, 0, 1, 2, 3, 4, 0, 65535, 0, 1, 2, 3, 4, 0, 65535>    # (0000 FFFF 0000 0001 0002 0003 0004 0000 FFFF 0000 0001 0002 0003 0004 0000 FFFF)
Max(srcT, src2):        <2, 65535, 2, 2, 2, 3, 4, 2, 65535, 2, 2, 2, 3, 4, 2, 65535>    # (0002 FFFF 0002 0002 0002 0003 0004 0002 FFFF 0002 0002 0002 0003 0004 0002 FFFF)
Min(srcT, src0):        <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>        # (0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000)
Min(srcT, src2):        <0, 2, 0, 1, 2, 2, 2, 0, 2, 0, 1, 2, 2, 2, 0, 2>        # (0000 0002 0000 0001 0002 0002 0002 0000 0002 0000 0001 0002 0002 0002 0000 0002)
Multiply(srcT, src2):   <0, 65534, 0, 2, 4, 6, 8, 0, 65534, 0, 2, 4, 6, 8, 0, 65534>    # (0000 FFFE 0000 0002 0004 0006 0008 0000 FFFE 0000 0002 0004 0006 0008 0000 FFFE)
Negate(srcT):   <0, 1, 0, 65535, 65534, 65533, 65532, 0, 1, 0, 65535, 65534, 65533, 65532, 0, 1>        # (0000 0001 0000 FFFF FFFE FFFD FFFC 0000 0001 0000 FFFF FFFE FFFD FFFC 0000 0001)
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1>        # (0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001 0001)
OnesComplement(srcT):   <65535, 0, 65535, 65534, 65533, 65532, 65531, 65535, 0, 65535, 65534, 65533, 65532, 65531, 65535, 0>    # (FFFF 0000 FFFF FFFE FFFD FFFC FFFB FFFF 0000 FFFF FFFE FFFD FFFC FFFB FFFF 0000)
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0>        # (0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000)
SquareRoot(srcT):       <0, 255, 0, 1, 1, 1, 2, 0, 255, 0, 1, 1, 1, 2, 0, 255>  # (0000 00FF 0000 0001 0001 0001 0002 0000 00FF 0000 0001 0001 0001 0002 0000 00FF)
Subtract(srcT, src1):   <65535, 65534, 65535, 0, 1, 2, 3, 65535, 65534, 65535, 0, 1, 2, 3, 65535, 65534>        # (FFFF FFFE FFFF 0000 0001 0002 0003 FFFF FFFE FFFF 0000 0001 0002 0003 FFFF FFFE)
Subtract(srcT, src2):   <65534, 65533, 65534, 65535, 0, 1, 2, 65534, 65533, 65534, 65535, 0, 1, 2, 65534, 65533>       # (FFFE FFFD FFFE FFFF 0000 0001 0002 FFFE FFFD FFFE FFFF 0000 0001 0002 FFFE FFFD)
Xor(srcT, src1):        <1, 65534, 1, 0, 3, 2, 5, 1, 65534, 1, 0, 3, 2, 5, 1, 65534>    # (0001 FFFE 0001 0000 0003 0002 0005 0001 FFFE 0001 0000 0003 0002 0005 0001 FFFE)
Xor(srcT, src2):        <2, 65533, 2, 3, 0, 1, 6, 2, 65533, 2, 3, 0, 1, 6, 2, 65533>    # (0002 FFFD 0002 0003 0000 0001 0006 0002 FFFD 0002 0003 0000 0001 0006 0002 FFFD)

-- UInt32, Vector<UInt32>.Count=8 --
srcT:   <0, 4294967295, 0, 1, 2, 3, 4, 0>       # (00000000 FFFFFFFF 00000000 00000001 00000002 00000003 00000004 00000000)
srcAllOnes:     <4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295>       # (FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
Abs(srcT):      <0, 4294967295, 0, 1, 2, 3, 4, 0>       # (00000000 FFFFFFFF 00000000 00000001 00000002 00000003 00000004 00000000)
Abs(srcAllOnes):        <4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295># (FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
Add(srcT, src1):        <1, 0, 1, 2, 3, 4, 5, 1>        # (00000001 00000000 00000001 00000002 00000003 00000004 00000005 00000001)
Add(srcT, src2):        <2, 1, 2, 3, 4, 5, 6, 2>        # (00000002 00000001 00000002 00000003 00000004 00000005 00000006 00000002)
AndNot(srcT, src1):     <0, 4294967294, 0, 0, 2, 2, 4, 0>       # (00000000 FFFFFFFE 00000000 00000000 00000002 00000002 00000004 00000000)
AndNot(srcT, src2):     <0, 4294967293, 0, 1, 0, 1, 4, 0>       # (00000000 FFFFFFFD 00000000 00000001 00000000 00000001 00000004 00000000)
BitwiseAnd(srcT, src1): <0, 1, 0, 1, 0, 1, 0, 0>        # (00000000 00000001 00000000 00000001 00000000 00000001 00000000 00000000)
BitwiseAnd(srcT, src2): <0, 2, 0, 0, 2, 2, 0, 0>        # (00000000 00000002 00000000 00000000 00000002 00000002 00000000 00000000)
BitwiseOr(srcT, src1):  <1, 4294967295, 1, 1, 3, 3, 5, 1>       # (00000001 FFFFFFFF 00000001 00000001 00000003 00000003 00000005 00000001)
BitwiseOr(srcT, src2):  <2, 4294967295, 2, 3, 2, 3, 6, 2>       # (00000002 FFFFFFFF 00000002 00000003 00000002 00000003 00000006 00000002)
Divide(srcT, src2):     <0, 2147483647, 0, 0, 1, 1, 2, 0>       # (00000000 7FFFFFFF 00000000 00000000 00000001 00000001 00000002 00000000)
Dot(srcT, src1):        9
Dot(srcT, src2):        18
Dot(src1, src2):        16
Equals(srcT, src0):     <4294967295, 0, 4294967295, 0, 0, 0, 0, 4294967295>     # (FFFFFFFF 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 FFFFFFFF)
Equals(srcT, src1):     <0, 0, 0, 4294967295, 0, 0, 0, 0>       # (00000000 00000000 00000000 FFFFFFFF 00000000 00000000 00000000 00000000)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 4294967295, 0, 4294967295, 4294967295, 4294967295, 4294967295, 0>   # (00000000 FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000000)
GreaterThan(srcT, src1):        <0, 4294967295, 0, 0, 4294967295, 4294967295, 4294967295, 0>    # (00000000 FFFFFFFF 00000000 00000000 FFFFFFFF FFFFFFFF FFFFFFFF 00000000)
GreaterThanOrEqual(srcT, src0): <4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295>        # (FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF)
GreaterThanOrEqual(srcT, src1): <0, 4294967295, 0, 4294967295, 4294967295, 4294967295, 4294967295, 0>   # (00000000 FFFFFFFF 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000000)
LessThan(srcT, src0):   <0, 0, 0, 0, 0, 0, 0, 0>        # (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
LessThan(srcT, src1):   <4294967295, 0, 4294967295, 0, 0, 0, 0, 4294967295>     # (FFFFFFFF 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 FFFFFFFF)
LessThanOrEqual(srcT, src0):    <4294967295, 0, 4294967295, 0, 0, 0, 0, 4294967295>     # (FFFFFFFF 00000000 FFFFFFFF 00000000 00000000 00000000 00000000 FFFFFFFF)
LessThanOrEqual(srcT, src1):    <4294967295, 0, 4294967295, 4294967295, 0, 0, 0, 4294967295>    # (FFFFFFFF 00000000 FFFFFFFF FFFFFFFF 00000000 00000000 00000000 FFFFFFFF)
Max(srcT, src0):        <0, 4294967295, 0, 1, 2, 3, 4, 0>       # (00000000 FFFFFFFF 00000000 00000001 00000002 00000003 00000004 00000000)
Max(srcT, src2):        <2, 4294967295, 2, 2, 2, 3, 4, 2>       # (00000002 FFFFFFFF 00000002 00000002 00000002 00000003 00000004 00000002)
Min(srcT, src0):        <0, 0, 0, 0, 0, 0, 0, 0>        # (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
Min(srcT, src2):        <0, 2, 0, 1, 2, 2, 2, 0>        # (00000000 00000002 00000000 00000001 00000002 00000002 00000002 00000000)
Multiply(srcT, src2):   <0, 4294967294, 0, 2, 4, 6, 8, 0>       # (00000000 FFFFFFFE 00000000 00000002 00000004 00000006 00000008 00000000)
Negate(srcT):   <0, 1, 0, 4294967295, 4294967294, 4294967293, 4294967292, 0>    # (00000000 00000001 00000000 FFFFFFFF FFFFFFFE FFFFFFFD FFFFFFFC 00000000)
Negate(srcAllOnes):     <1, 1, 1, 1, 1, 1, 1, 1>        # (00000001 00000001 00000001 00000001 00000001 00000001 00000001 00000001)
OnesComplement(srcT):   <4294967295, 0, 4294967295, 4294967294, 4294967293, 4294967292, 4294967291, 4294967295> # (FFFFFFFF 00000000 FFFFFFFF FFFFFFFE FFFFFFFD FFFFFFFC FFFFFFFB FFFFFFFF)
OnesComplement(srcAllOnes):     <0, 0, 0, 0, 0, 0, 0, 0>        # (00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000)
SquareRoot(srcT):       <0, 65535, 0, 1, 1, 1, 2, 0>    # (00000000 0000FFFF 00000000 00000001 00000001 00000001 00000002 00000000)
Subtract(srcT, src1):   <4294967295, 4294967294, 4294967295, 0, 1, 2, 3, 4294967295>    # (FFFFFFFF FFFFFFFE FFFFFFFF 00000000 00000001 00000002 00000003 FFFFFFFF)
Subtract(srcT, src2):   <4294967294, 4294967293, 4294967294, 4294967295, 0, 1, 2, 4294967294>   # (FFFFFFFE FFFFFFFD FFFFFFFE FFFFFFFF 00000000 00000001 00000002 FFFFFFFE)
Xor(srcT, src1):        <1, 4294967294, 1, 0, 3, 2, 5, 1>       # (00000001 FFFFFFFE 00000001 00000000 00000003 00000002 00000005 00000001)
Xor(srcT, src2):        <2, 4294967293, 2, 3, 0, 1, 6, 2>       # (00000002 FFFFFFFD 00000002 00000003 00000000 00000001 00000006 00000002)

-- UInt64, Vector<UInt64>.Count=4 --
srcT:   <0, 18446744073709551615, 0, 1> # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000001)
srcAllOnes:     <18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615>        # (FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
Abs(srcT):      <0, 18446744073709551615, 0, 1> # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000001)
Abs(srcAllOnes):        <18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615>       # (FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
Add(srcT, src1):        <1, 0, 1, 2>    # (0000000000000001 0000000000000000 0000000000000001 0000000000000002)
Add(srcT, src2):        <2, 1, 2, 3>    # (0000000000000002 0000000000000001 0000000000000002 0000000000000003)
AndNot(srcT, src1):     <0, 18446744073709551614, 0, 0> # (0000000000000000 FFFFFFFFFFFFFFFE 0000000000000000 0000000000000000)
AndNot(srcT, src2):     <0, 18446744073709551613, 0, 1> # (0000000000000000 FFFFFFFFFFFFFFFD 0000000000000000 0000000000000001)
BitwiseAnd(srcT, src1): <0, 1, 0, 1>    # (0000000000000000 0000000000000001 0000000000000000 0000000000000001)
BitwiseAnd(srcT, src2): <0, 2, 0, 0>    # (0000000000000000 0000000000000002 0000000000000000 0000000000000000)
BitwiseOr(srcT, src1):  <1, 18446744073709551615, 1, 1> # (0000000000000001 FFFFFFFFFFFFFFFF 0000000000000001 0000000000000001)
BitwiseOr(srcT, src2):  <2, 18446744073709551615, 2, 3> # (0000000000000002 FFFFFFFFFFFFFFFF 0000000000000002 0000000000000003)
Divide(srcT, src2):     <0, 9223372036854775807, 0, 0>  # (0000000000000000 7FFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
Dot(srcT, src1):        0
Dot(srcT, src2):        0
Dot(src1, src2):        8
Equals(srcT, src0):     <18446744073709551615, 0, 18446744073709551615, 0>      # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000)
Equals(srcT, src1):     <0, 0, 0, 18446744073709551615> # (0000000000000000 0000000000000000 0000000000000000 FFFFFFFFFFFFFFFF)
EqualsAll(srcT, src0):  False
EqualsAny(srcT, src0):  True
GreaterThan(srcT, src0):        <0, 18446744073709551615, 0, 18446744073709551615>      # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF)
GreaterThan(srcT, src1):        <0, 18446744073709551615, 0, 0> # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000000)
GreaterThanOrEqual(srcT, src0): <18446744073709551615, 18446744073709551615, 18446744073709551615, 18446744073709551615># (FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
GreaterThanOrEqual(srcT, src1): <0, 18446744073709551615, 0, 18446744073709551615>      # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF)
LessThan(srcT, src0):   <0, 0, 0, 0>    # (0000000000000000 0000000000000000 0000000000000000 0000000000000000)
LessThan(srcT, src1):   <18446744073709551615, 0, 18446744073709551615, 0>      # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000)
LessThanOrEqual(srcT, src0):    <18446744073709551615, 0, 18446744073709551615, 0>      # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000)
LessThanOrEqual(srcT, src1):    <18446744073709551615, 0, 18446744073709551615, 18446744073709551615>   # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFF)
Max(srcT, src0):        <0, 18446744073709551615, 0, 1> # (0000000000000000 FFFFFFFFFFFFFFFF 0000000000000000 0000000000000001)
Max(srcT, src2):        <2, 18446744073709551615, 2, 2> # (0000000000000002 FFFFFFFFFFFFFFFF 0000000000000002 0000000000000002)
Min(srcT, src0):        <0, 0, 0, 0>    # (0000000000000000 0000000000000000 0000000000000000 0000000000000000)
Min(srcT, src2):        <0, 2, 0, 1>    # (0000000000000000 0000000000000002 0000000000000000 0000000000000001)
Multiply(srcT, src2):   <0, 18446744073709551614, 0, 2> # (0000000000000000 FFFFFFFFFFFFFFFE 0000000000000000 0000000000000002)
Negate(srcT):   <0, 1, 0, 18446744073709551615> # (0000000000000000 0000000000000001 0000000000000000 FFFFFFFFFFFFFFFF)
Negate(srcAllOnes):     <1, 1, 1, 1>    # (0000000000000001 0000000000000001 0000000000000001 0000000000000001)
OnesComplement(srcT):   <18446744073709551615, 0, 18446744073709551615, 18446744073709551614>   # (FFFFFFFFFFFFFFFF 0000000000000000 FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFE)
OnesComplement(srcAllOnes):     <0, 0, 0, 0>    # (0000000000000000 0000000000000000 0000000000000000 0000000000000000)
SquareRoot(srcT):       <0, 4294967296, 0, 1>   # (0000000000000000 0000000100000000 0000000000000000 0000000000000001)
Subtract(srcT, src1):   <18446744073709551615, 18446744073709551614, 18446744073709551615, 0>   # (FFFFFFFFFFFFFFFF FFFFFFFFFFFFFFFE FFFFFFFFFFFFFFFF 0000000000000000)
Subtract(srcT, src2):   <18446744073709551614, 18446744073709551613, 18446744073709551614, 18446744073709551615>       # (FFFFFFFFFFFFFFFE FFFFFFFFFFFFFFFD FFFFFFFFFFFFFFFE FFFFFFFFFFFFFFFF)
Xor(srcT, src1):        <1, 18446744073709551614, 1, 0> # (0000000000000001 FFFFFFFFFFFFFFFE 0000000000000001 0000000000000000)
Xor(srcT, src2):        <2, 18446744073709551613, 2, 3> # (0000000000000002 FFFFFFFFFFFFFFFD 0000000000000002 0000000000000003)

```
